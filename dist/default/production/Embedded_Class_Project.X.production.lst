

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Nov 06 11:45:44 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F15323
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F15323 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000E                     	;# 
    86  0012                     	;# 
    87  0014                     	;# 
    88  0018                     	;# 
    89  001A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  0119                     	;# 
    97  0119                     	;# 
    98  0119                     	;# 
    99  011A                     	;# 
   100  011A                     	;# 
   101  011A                     	;# 
   102  011B                     	;# 
   103  011B                     	;# 
   104  011B                     	;# 
   105  011B                     	;# 
   106  011B                     	;# 
   107  011C                     	;# 
   108  011C                     	;# 
   109  011C                     	;# 
   110  011D                     	;# 
   111  011D                     	;# 
   112  011D                     	;# 
   113  011E                     	;# 
   114  011E                     	;# 
   115  011E                     	;# 
   116  011F                     	;# 
   117  011F                     	;# 
   118  011F                     	;# 
   119  011F                     	;# 
   120  011F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  018E                     	;# 
   124  018F                     	;# 
   125  0190                     	;# 
   126  0191                     	;# 
   127  0192                     	;# 
   128  020C                     	;# 
   129  020C                     	;# 
   130  020D                     	;# 
   131  020E                     	;# 
   132  020F                     	;# 
   133  020F                     	;# 
   134  0210                     	;# 
   135  0210                     	;# 
   136  0211                     	;# 
   137  0211                     	;# 
   138  028C                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028D                     	;# 
   142  028E                     	;# 
   143  028F                     	;# 
   144  0290                     	;# 
   145  0291                     	;# 
   146  030C                     	;# 
   147  030C                     	;# 
   148  030D                     	;# 
   149  030E                     	;# 
   150  030F                     	;# 
   151  0310                     	;# 
   152  0310                     	;# 
   153  0311                     	;# 
   154  0312                     	;# 
   155  0313                     	;# 
   156  0314                     	;# 
   157  0315                     	;# 
   158  0316                     	;# 
   159  0318                     	;# 
   160  0319                     	;# 
   161  031A                     	;# 
   162  031C                     	;# 
   163  031D                     	;# 
   164  031E                     	;# 
   165  038C                     	;# 
   166  038D                     	;# 
   167  038E                     	;# 
   168  058C                     	;# 
   169  058C                     	;# 
   170  058D                     	;# 
   171  058E                     	;# 
   172  058F                     	;# 
   173  058F                     	;# 
   174  0590                     	;# 
   175  0591                     	;# 
   176  0592                     	;# 
   177  0593                     	;# 
   178  059C                     	;# 
   179  059C                     	;# 
   180  059D                     	;# 
   181  059D                     	;# 
   182  059E                     	;# 
   183  059F                     	;# 
   184  060C                     	;# 
   185  060D                     	;# 
   186  060E                     	;# 
   187  060F                     	;# 
   188  0610                     	;# 
   189  0611                     	;# 
   190  0612                     	;# 
   191  0613                     	;# 
   192  0614                     	;# 
   193  070C                     	;# 
   194  070D                     	;# 
   195  070E                     	;# 
   196  070F                     	;# 
   197  0710                     	;# 
   198  0711                     	;# 
   199  0712                     	;# 
   200  0713                     	;# 
   201  0716                     	;# 
   202  0717                     	;# 
   203  0718                     	;# 
   204  0719                     	;# 
   205  071A                     	;# 
   206  071B                     	;# 
   207  071C                     	;# 
   208  071D                     	;# 
   209  0796                     	;# 
   210  0797                     	;# 
   211  0798                     	;# 
   212  0799                     	;# 
   213  079A                     	;# 
   214  079B                     	;# 
   215  080C                     	;# 
   216  080D                     	;# 
   217  080E                     	;# 
   218  080F                     	;# 
   219  0810                     	;# 
   220  0811                     	;# 
   221  0812                     	;# 
   222  0813                     	;# 
   223  0814                     	;# 
   224  081A                     	;# 
   225  081A                     	;# 
   226  081B                     	;# 
   227  081C                     	;# 
   228  081C                     	;# 
   229  081D                     	;# 
   230  081E                     	;# 
   231  081F                     	;# 
   232  088C                     	;# 
   233  088D                     	;# 
   234  088E                     	;# 
   235  088F                     	;# 
   236  0890                     	;# 
   237  0891                     	;# 
   238  0892                     	;# 
   239  0893                     	;# 
   240  0895                     	;# 
   241  0896                     	;# 
   242  090C                     	;# 
   243  090E                     	;# 
   244  090F                     	;# 
   245  091F                     	;# 
   246  098F                     	;# 
   247  098F                     	;# 
   248  0990                     	;# 
   249  0991                     	;# 
   250  0992                     	;# 
   251  0993                     	;# 
   252  0994                     	;# 
   253  0995                     	;# 
   254  0996                     	;# 
   255  0997                     	;# 
   256  1E0F                     	;# 
   257  1E10                     	;# 
   258  1E11                     	;# 
   259  1E12                     	;# 
   260  1E13                     	;# 
   261  1E14                     	;# 
   262  1E15                     	;# 
   263  1E16                     	;# 
   264  1E17                     	;# 
   265  1E18                     	;# 
   266  1E19                     	;# 
   267  1E1A                     	;# 
   268  1E1B                     	;# 
   269  1E1C                     	;# 
   270  1E1D                     	;# 
   271  1E1E                     	;# 
   272  1E1F                     	;# 
   273  1E20                     	;# 
   274  1E21                     	;# 
   275  1E22                     	;# 
   276  1E23                     	;# 
   277  1E24                     	;# 
   278  1E25                     	;# 
   279  1E26                     	;# 
   280  1E27                     	;# 
   281  1E28                     	;# 
   282  1E29                     	;# 
   283  1E2A                     	;# 
   284  1E2B                     	;# 
   285  1E2C                     	;# 
   286  1E2D                     	;# 
   287  1E2E                     	;# 
   288  1E2F                     	;# 
   289  1E30                     	;# 
   290  1E31                     	;# 
   291  1E32                     	;# 
   292  1E33                     	;# 
   293  1E34                     	;# 
   294  1E35                     	;# 
   295  1E36                     	;# 
   296  1E37                     	;# 
   297  1E8F                     	;# 
   298  1E90                     	;# 
   299  1E91                     	;# 
   300  1E92                     	;# 
   301  1E93                     	;# 
   302  1E9C                     	;# 
   303  1EA1                     	;# 
   304  1EA2                     	;# 
   305  1EB1                     	;# 
   306  1EBB                     	;# 
   307  1EBC                     	;# 
   308  1EBD                     	;# 
   309  1EBE                     	;# 
   310  1EC3                     	;# 
   311  1EC5                     	;# 
   312  1EC6                     	;# 
   313  1EC7                     	;# 
   314  1ECB                     	;# 
   315  1ECC                     	;# 
   316  1F10                     	;# 
   317  1F11                     	;# 
   318  1F12                     	;# 
   319  1F13                     	;# 
   320  1F14                     	;# 
   321  1F15                     	;# 
   322  1F20                     	;# 
   323  1F21                     	;# 
   324  1F22                     	;# 
   325  1F23                     	;# 
   326  1F24                     	;# 
   327  1F25                     	;# 
   328  1F38                     	;# 
   329  1F39                     	;# 
   330  1F3A                     	;# 
   331  1F3B                     	;# 
   332  1F3C                     	;# 
   333  1F3D                     	;# 
   334  1F3E                     	;# 
   335  1F3F                     	;# 
   336  1F4E                     	;# 
   337  1F4F                     	;# 
   338  1F50                     	;# 
   339  1F51                     	;# 
   340  1F52                     	;# 
   341  1F53                     	;# 
   342  1F54                     	;# 
   343  1F55                     	;# 
   344  1FE4                     	;# 
   345  1FE5                     	;# 
   346  1FE6                     	;# 
   347  1FE7                     	;# 
   348  1FE8                     	;# 
   349  1FE8                     	;# 
   350  1FE9                     	;# 
   351  1FEA                     	;# 
   352  1FEA                     	;# 
   353  1FEB                     	;# 
   354  1FED                     	;# 
   355  1FEE                     	;# 
   356  1FEF                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000E                     	;# 
   371  0012                     	;# 
   372  0014                     	;# 
   373  0018                     	;# 
   374  001A                     	;# 
   375  009B                     	;# 
   376  009B                     	;# 
   377  009C                     	;# 
   378  009D                     	;# 
   379  009E                     	;# 
   380  009F                     	;# 
   381  0119                     	;# 
   382  0119                     	;# 
   383  0119                     	;# 
   384  011A                     	;# 
   385  011A                     	;# 
   386  011A                     	;# 
   387  011B                     	;# 
   388  011B                     	;# 
   389  011B                     	;# 
   390  011B                     	;# 
   391  011B                     	;# 
   392  011C                     	;# 
   393  011C                     	;# 
   394  011C                     	;# 
   395  011D                     	;# 
   396  011D                     	;# 
   397  011D                     	;# 
   398  011E                     	;# 
   399  011E                     	;# 
   400  011E                     	;# 
   401  011F                     	;# 
   402  011F                     	;# 
   403  011F                     	;# 
   404  011F                     	;# 
   405  011F                     	;# 
   406  018C                     	;# 
   407  018D                     	;# 
   408  018E                     	;# 
   409  018F                     	;# 
   410  0190                     	;# 
   411  0191                     	;# 
   412  0192                     	;# 
   413  020C                     	;# 
   414  020C                     	;# 
   415  020D                     	;# 
   416  020E                     	;# 
   417  020F                     	;# 
   418  020F                     	;# 
   419  0210                     	;# 
   420  0210                     	;# 
   421  0211                     	;# 
   422  0211                     	;# 
   423  028C                     	;# 
   424  028C                     	;# 
   425  028D                     	;# 
   426  028D                     	;# 
   427  028E                     	;# 
   428  028F                     	;# 
   429  0290                     	;# 
   430  0291                     	;# 
   431  030C                     	;# 
   432  030C                     	;# 
   433  030D                     	;# 
   434  030E                     	;# 
   435  030F                     	;# 
   436  0310                     	;# 
   437  0310                     	;# 
   438  0311                     	;# 
   439  0312                     	;# 
   440  0313                     	;# 
   441  0314                     	;# 
   442  0315                     	;# 
   443  0316                     	;# 
   444  0318                     	;# 
   445  0319                     	;# 
   446  031A                     	;# 
   447  031C                     	;# 
   448  031D                     	;# 
   449  031E                     	;# 
   450  038C                     	;# 
   451  038D                     	;# 
   452  038E                     	;# 
   453  058C                     	;# 
   454  058C                     	;# 
   455  058D                     	;# 
   456  058E                     	;# 
   457  058F                     	;# 
   458  058F                     	;# 
   459  0590                     	;# 
   460  0591                     	;# 
   461  0592                     	;# 
   462  0593                     	;# 
   463  059C                     	;# 
   464  059C                     	;# 
   465  059D                     	;# 
   466  059D                     	;# 
   467  059E                     	;# 
   468  059F                     	;# 
   469  060C                     	;# 
   470  060D                     	;# 
   471  060E                     	;# 
   472  060F                     	;# 
   473  0610                     	;# 
   474  0611                     	;# 
   475  0612                     	;# 
   476  0613                     	;# 
   477  0614                     	;# 
   478  070C                     	;# 
   479  070D                     	;# 
   480  070E                     	;# 
   481  070F                     	;# 
   482  0710                     	;# 
   483  0711                     	;# 
   484  0712                     	;# 
   485  0713                     	;# 
   486  0716                     	;# 
   487  0717                     	;# 
   488  0718                     	;# 
   489  0719                     	;# 
   490  071A                     	;# 
   491  071B                     	;# 
   492  071C                     	;# 
   493  071D                     	;# 
   494  0796                     	;# 
   495  0797                     	;# 
   496  0798                     	;# 
   497  0799                     	;# 
   498  079A                     	;# 
   499  079B                     	;# 
   500  080C                     	;# 
   501  080D                     	;# 
   502  080E                     	;# 
   503  080F                     	;# 
   504  0810                     	;# 
   505  0811                     	;# 
   506  0812                     	;# 
   507  0813                     	;# 
   508  0814                     	;# 
   509  081A                     	;# 
   510  081A                     	;# 
   511  081B                     	;# 
   512  081C                     	;# 
   513  081C                     	;# 
   514  081D                     	;# 
   515  081E                     	;# 
   516  081F                     	;# 
   517  088C                     	;# 
   518  088D                     	;# 
   519  088E                     	;# 
   520  088F                     	;# 
   521  0890                     	;# 
   522  0891                     	;# 
   523  0892                     	;# 
   524  0893                     	;# 
   525  0895                     	;# 
   526  0896                     	;# 
   527  090C                     	;# 
   528  090E                     	;# 
   529  090F                     	;# 
   530  091F                     	;# 
   531  098F                     	;# 
   532  098F                     	;# 
   533  0990                     	;# 
   534  0991                     	;# 
   535  0992                     	;# 
   536  0993                     	;# 
   537  0994                     	;# 
   538  0995                     	;# 
   539  0996                     	;# 
   540  0997                     	;# 
   541  1E0F                     	;# 
   542  1E10                     	;# 
   543  1E11                     	;# 
   544  1E12                     	;# 
   545  1E13                     	;# 
   546  1E14                     	;# 
   547  1E15                     	;# 
   548  1E16                     	;# 
   549  1E17                     	;# 
   550  1E18                     	;# 
   551  1E19                     	;# 
   552  1E1A                     	;# 
   553  1E1B                     	;# 
   554  1E1C                     	;# 
   555  1E1D                     	;# 
   556  1E1E                     	;# 
   557  1E1F                     	;# 
   558  1E20                     	;# 
   559  1E21                     	;# 
   560  1E22                     	;# 
   561  1E23                     	;# 
   562  1E24                     	;# 
   563  1E25                     	;# 
   564  1E26                     	;# 
   565  1E27                     	;# 
   566  1E28                     	;# 
   567  1E29                     	;# 
   568  1E2A                     	;# 
   569  1E2B                     	;# 
   570  1E2C                     	;# 
   571  1E2D                     	;# 
   572  1E2E                     	;# 
   573  1E2F                     	;# 
   574  1E30                     	;# 
   575  1E31                     	;# 
   576  1E32                     	;# 
   577  1E33                     	;# 
   578  1E34                     	;# 
   579  1E35                     	;# 
   580  1E36                     	;# 
   581  1E37                     	;# 
   582  1E8F                     	;# 
   583  1E90                     	;# 
   584  1E91                     	;# 
   585  1E92                     	;# 
   586  1E93                     	;# 
   587  1E9C                     	;# 
   588  1EA1                     	;# 
   589  1EA2                     	;# 
   590  1EB1                     	;# 
   591  1EBB                     	;# 
   592  1EBC                     	;# 
   593  1EBD                     	;# 
   594  1EBE                     	;# 
   595  1EC3                     	;# 
   596  1EC5                     	;# 
   597  1EC6                     	;# 
   598  1EC7                     	;# 
   599  1ECB                     	;# 
   600  1ECC                     	;# 
   601  1F10                     	;# 
   602  1F11                     	;# 
   603  1F12                     	;# 
   604  1F13                     	;# 
   605  1F14                     	;# 
   606  1F15                     	;# 
   607  1F20                     	;# 
   608  1F21                     	;# 
   609  1F22                     	;# 
   610  1F23                     	;# 
   611  1F24                     	;# 
   612  1F25                     	;# 
   613  1F38                     	;# 
   614  1F39                     	;# 
   615  1F3A                     	;# 
   616  1F3B                     	;# 
   617  1F3C                     	;# 
   618  1F3D                     	;# 
   619  1F3E                     	;# 
   620  1F3F                     	;# 
   621  1F4E                     	;# 
   622  1F4F                     	;# 
   623  1F50                     	;# 
   624  1F51                     	;# 
   625  1F52                     	;# 
   626  1F53                     	;# 
   627  1F54                     	;# 
   628  1F55                     	;# 
   629  1FE4                     	;# 
   630  1FE5                     	;# 
   631  1FE6                     	;# 
   632  1FE7                     	;# 
   633  1FE8                     	;# 
   634  1FE8                     	;# 
   635  1FE9                     	;# 
   636  1FEA                     	;# 
   637  1FEA                     	;# 
   638  1FEB                     	;# 
   639  1FED                     	;# 
   640  1FEE                     	;# 
   641  1FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000E                     	;# 
   656  0012                     	;# 
   657  0014                     	;# 
   658  0018                     	;# 
   659  001A                     	;# 
   660  009B                     	;# 
   661  009B                     	;# 
   662  009C                     	;# 
   663  009D                     	;# 
   664  009E                     	;# 
   665  009F                     	;# 
   666  0119                     	;# 
   667  0119                     	;# 
   668  0119                     	;# 
   669  011A                     	;# 
   670  011A                     	;# 
   671  011A                     	;# 
   672  011B                     	;# 
   673  011B                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011B                     	;# 
   677  011C                     	;# 
   678  011C                     	;# 
   679  011C                     	;# 
   680  011D                     	;# 
   681  011D                     	;# 
   682  011D                     	;# 
   683  011E                     	;# 
   684  011E                     	;# 
   685  011E                     	;# 
   686  011F                     	;# 
   687  011F                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  011F                     	;# 
   691  018C                     	;# 
   692  018D                     	;# 
   693  018E                     	;# 
   694  018F                     	;# 
   695  0190                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  020C                     	;# 
   699  020C                     	;# 
   700  020D                     	;# 
   701  020E                     	;# 
   702  020F                     	;# 
   703  020F                     	;# 
   704  0210                     	;# 
   705  0210                     	;# 
   706  0211                     	;# 
   707  0211                     	;# 
   708  028C                     	;# 
   709  028C                     	;# 
   710  028D                     	;# 
   711  028D                     	;# 
   712  028E                     	;# 
   713  028F                     	;# 
   714  0290                     	;# 
   715  0291                     	;# 
   716  030C                     	;# 
   717  030C                     	;# 
   718  030D                     	;# 
   719  030E                     	;# 
   720  030F                     	;# 
   721  0310                     	;# 
   722  0310                     	;# 
   723  0311                     	;# 
   724  0312                     	;# 
   725  0313                     	;# 
   726  0314                     	;# 
   727  0315                     	;# 
   728  0316                     	;# 
   729  0318                     	;# 
   730  0319                     	;# 
   731  031A                     	;# 
   732  031C                     	;# 
   733  031D                     	;# 
   734  031E                     	;# 
   735  038C                     	;# 
   736  038D                     	;# 
   737  038E                     	;# 
   738  058C                     	;# 
   739  058C                     	;# 
   740  058D                     	;# 
   741  058E                     	;# 
   742  058F                     	;# 
   743  058F                     	;# 
   744  0590                     	;# 
   745  0591                     	;# 
   746  0592                     	;# 
   747  0593                     	;# 
   748  059C                     	;# 
   749  059C                     	;# 
   750  059D                     	;# 
   751  059D                     	;# 
   752  059E                     	;# 
   753  059F                     	;# 
   754  060C                     	;# 
   755  060D                     	;# 
   756  060E                     	;# 
   757  060F                     	;# 
   758  0610                     	;# 
   759  0611                     	;# 
   760  0612                     	;# 
   761  0613                     	;# 
   762  0614                     	;# 
   763  070C                     	;# 
   764  070D                     	;# 
   765  070E                     	;# 
   766  070F                     	;# 
   767  0710                     	;# 
   768  0711                     	;# 
   769  0712                     	;# 
   770  0713                     	;# 
   771  0716                     	;# 
   772  0717                     	;# 
   773  0718                     	;# 
   774  0719                     	;# 
   775  071A                     	;# 
   776  071B                     	;# 
   777  071C                     	;# 
   778  071D                     	;# 
   779  0796                     	;# 
   780  0797                     	;# 
   781  0798                     	;# 
   782  0799                     	;# 
   783  079A                     	;# 
   784  079B                     	;# 
   785  080C                     	;# 
   786  080D                     	;# 
   787  080E                     	;# 
   788  080F                     	;# 
   789  0810                     	;# 
   790  0811                     	;# 
   791  0812                     	;# 
   792  0813                     	;# 
   793  0814                     	;# 
   794  081A                     	;# 
   795  081A                     	;# 
   796  081B                     	;# 
   797  081C                     	;# 
   798  081C                     	;# 
   799  081D                     	;# 
   800  081E                     	;# 
   801  081F                     	;# 
   802  088C                     	;# 
   803  088D                     	;# 
   804  088E                     	;# 
   805  088F                     	;# 
   806  0890                     	;# 
   807  0891                     	;# 
   808  0892                     	;# 
   809  0893                     	;# 
   810  0895                     	;# 
   811  0896                     	;# 
   812  090C                     	;# 
   813  090E                     	;# 
   814  090F                     	;# 
   815  091F                     	;# 
   816  098F                     	;# 
   817  098F                     	;# 
   818  0990                     	;# 
   819  0991                     	;# 
   820  0992                     	;# 
   821  0993                     	;# 
   822  0994                     	;# 
   823  0995                     	;# 
   824  0996                     	;# 
   825  0997                     	;# 
   826  1E0F                     	;# 
   827  1E10                     	;# 
   828  1E11                     	;# 
   829  1E12                     	;# 
   830  1E13                     	;# 
   831  1E14                     	;# 
   832  1E15                     	;# 
   833  1E16                     	;# 
   834  1E17                     	;# 
   835  1E18                     	;# 
   836  1E19                     	;# 
   837  1E1A                     	;# 
   838  1E1B                     	;# 
   839  1E1C                     	;# 
   840  1E1D                     	;# 
   841  1E1E                     	;# 
   842  1E1F                     	;# 
   843  1E20                     	;# 
   844  1E21                     	;# 
   845  1E22                     	;# 
   846  1E23                     	;# 
   847  1E24                     	;# 
   848  1E25                     	;# 
   849  1E26                     	;# 
   850  1E27                     	;# 
   851  1E28                     	;# 
   852  1E29                     	;# 
   853  1E2A                     	;# 
   854  1E2B                     	;# 
   855  1E2C                     	;# 
   856  1E2D                     	;# 
   857  1E2E                     	;# 
   858  1E2F                     	;# 
   859  1E30                     	;# 
   860  1E31                     	;# 
   861  1E32                     	;# 
   862  1E33                     	;# 
   863  1E34                     	;# 
   864  1E35                     	;# 
   865  1E36                     	;# 
   866  1E37                     	;# 
   867  1E8F                     	;# 
   868  1E90                     	;# 
   869  1E91                     	;# 
   870  1E92                     	;# 
   871  1E93                     	;# 
   872  1E9C                     	;# 
   873  1EA1                     	;# 
   874  1EA2                     	;# 
   875  1EB1                     	;# 
   876  1EBB                     	;# 
   877  1EBC                     	;# 
   878  1EBD                     	;# 
   879  1EBE                     	;# 
   880  1EC3                     	;# 
   881  1EC5                     	;# 
   882  1EC6                     	;# 
   883  1EC7                     	;# 
   884  1ECB                     	;# 
   885  1ECC                     	;# 
   886  1F10                     	;# 
   887  1F11                     	;# 
   888  1F12                     	;# 
   889  1F13                     	;# 
   890  1F14                     	;# 
   891  1F15                     	;# 
   892  1F20                     	;# 
   893  1F21                     	;# 
   894  1F22                     	;# 
   895  1F23                     	;# 
   896  1F24                     	;# 
   897  1F25                     	;# 
   898  1F38                     	;# 
   899  1F39                     	;# 
   900  1F3A                     	;# 
   901  1F3B                     	;# 
   902  1F3C                     	;# 
   903  1F3D                     	;# 
   904  1F3E                     	;# 
   905  1F3F                     	;# 
   906  1F4E                     	;# 
   907  1F4F                     	;# 
   908  1F50                     	;# 
   909  1F51                     	;# 
   910  1F52                     	;# 
   911  1F53                     	;# 
   912  1F54                     	;# 
   913  1F55                     	;# 
   914  1FE4                     	;# 
   915  1FE5                     	;# 
   916  1FE6                     	;# 
   917  1FE7                     	;# 
   918  1FE8                     	;# 
   919  1FE8                     	;# 
   920  1FE9                     	;# 
   921  1FEA                     	;# 
   922  1FEA                     	;# 
   923  1FEB                     	;# 
   924  1FED                     	;# 
   925  1FEE                     	;# 
   926  1FEF                     	;# 
   927  0000                     	;# 
   928  0001                     	;# 
   929  0002                     	;# 
   930  0003                     	;# 
   931  0004                     	;# 
   932  0005                     	;# 
   933  0006                     	;# 
   934  0007                     	;# 
   935  0008                     	;# 
   936  0009                     	;# 
   937  000A                     	;# 
   938  000B                     	;# 
   939  000C                     	;# 
   940  000E                     	;# 
   941  0012                     	;# 
   942  0014                     	;# 
   943  0018                     	;# 
   944  001A                     	;# 
   945  009B                     	;# 
   946  009B                     	;# 
   947  009C                     	;# 
   948  009D                     	;# 
   949  009E                     	;# 
   950  009F                     	;# 
   951  0119                     	;# 
   952  0119                     	;# 
   953  0119                     	;# 
   954  011A                     	;# 
   955  011A                     	;# 
   956  011A                     	;# 
   957  011B                     	;# 
   958  011B                     	;# 
   959  011B                     	;# 
   960  011B                     	;# 
   961  011B                     	;# 
   962  011C                     	;# 
   963  011C                     	;# 
   964  011C                     	;# 
   965  011D                     	;# 
   966  011D                     	;# 
   967  011D                     	;# 
   968  011E                     	;# 
   969  011E                     	;# 
   970  011E                     	;# 
   971  011F                     	;# 
   972  011F                     	;# 
   973  011F                     	;# 
   974  011F                     	;# 
   975  011F                     	;# 
   976  018C                     	;# 
   977  018D                     	;# 
   978  018E                     	;# 
   979  018F                     	;# 
   980  0190                     	;# 
   981  0191                     	;# 
   982  0192                     	;# 
   983  020C                     	;# 
   984  020C                     	;# 
   985  020D                     	;# 
   986  020E                     	;# 
   987  020F                     	;# 
   988  020F                     	;# 
   989  0210                     	;# 
   990  0210                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  028C                     	;# 
   994  028C                     	;# 
   995  028D                     	;# 
   996  028D                     	;# 
   997  028E                     	;# 
   998  028F                     	;# 
   999  0290                     	;# 
  1000  0291                     	;# 
  1001  030C                     	;# 
  1002  030C                     	;# 
  1003  030D                     	;# 
  1004  030E                     	;# 
  1005  030F                     	;# 
  1006  0310                     	;# 
  1007  0310                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0314                     	;# 
  1012  0315                     	;# 
  1013  0316                     	;# 
  1014  0318                     	;# 
  1015  0319                     	;# 
  1016  031A                     	;# 
  1017  031C                     	;# 
  1018  031D                     	;# 
  1019  031E                     	;# 
  1020  038C                     	;# 
  1021  038D                     	;# 
  1022  038E                     	;# 
  1023  058C                     	;# 
  1024  058C                     	;# 
  1025  058D                     	;# 
  1026  058E                     	;# 
  1027  058F                     	;# 
  1028  058F                     	;# 
  1029  0590                     	;# 
  1030  0591                     	;# 
  1031  0592                     	;# 
  1032  0593                     	;# 
  1033  059C                     	;# 
  1034  059C                     	;# 
  1035  059D                     	;# 
  1036  059D                     	;# 
  1037  059E                     	;# 
  1038  059F                     	;# 
  1039  060C                     	;# 
  1040  060D                     	;# 
  1041  060E                     	;# 
  1042  060F                     	;# 
  1043  0610                     	;# 
  1044  0611                     	;# 
  1045  0612                     	;# 
  1046  0613                     	;# 
  1047  0614                     	;# 
  1048  070C                     	;# 
  1049  070D                     	;# 
  1050  070E                     	;# 
  1051  070F                     	;# 
  1052  0710                     	;# 
  1053  0711                     	;# 
  1054  0712                     	;# 
  1055  0713                     	;# 
  1056  0716                     	;# 
  1057  0717                     	;# 
  1058  0718                     	;# 
  1059  0719                     	;# 
  1060  071A                     	;# 
  1061  071B                     	;# 
  1062  071C                     	;# 
  1063  071D                     	;# 
  1064  0796                     	;# 
  1065  0797                     	;# 
  1066  0798                     	;# 
  1067  0799                     	;# 
  1068  079A                     	;# 
  1069  079B                     	;# 
  1070  080C                     	;# 
  1071  080D                     	;# 
  1072  080E                     	;# 
  1073  080F                     	;# 
  1074  0810                     	;# 
  1075  0811                     	;# 
  1076  0812                     	;# 
  1077  0813                     	;# 
  1078  0814                     	;# 
  1079  081A                     	;# 
  1080  081A                     	;# 
  1081  081B                     	;# 
  1082  081C                     	;# 
  1083  081C                     	;# 
  1084  081D                     	;# 
  1085  081E                     	;# 
  1086  081F                     	;# 
  1087  088C                     	;# 
  1088  088D                     	;# 
  1089  088E                     	;# 
  1090  088F                     	;# 
  1091  0890                     	;# 
  1092  0891                     	;# 
  1093  0892                     	;# 
  1094  0893                     	;# 
  1095  0895                     	;# 
  1096  0896                     	;# 
  1097  090C                     	;# 
  1098  090E                     	;# 
  1099  090F                     	;# 
  1100  091F                     	;# 
  1101  098F                     	;# 
  1102  098F                     	;# 
  1103  0990                     	;# 
  1104  0991                     	;# 
  1105  0992                     	;# 
  1106  0993                     	;# 
  1107  0994                     	;# 
  1108  0995                     	;# 
  1109  0996                     	;# 
  1110  0997                     	;# 
  1111  1E0F                     	;# 
  1112  1E10                     	;# 
  1113  1E11                     	;# 
  1114  1E12                     	;# 
  1115  1E13                     	;# 
  1116  1E14                     	;# 
  1117  1E15                     	;# 
  1118  1E16                     	;# 
  1119  1E17                     	;# 
  1120  1E18                     	;# 
  1121  1E19                     	;# 
  1122  1E1A                     	;# 
  1123  1E1B                     	;# 
  1124  1E1C                     	;# 
  1125  1E1D                     	;# 
  1126  1E1E                     	;# 
  1127  1E1F                     	;# 
  1128  1E20                     	;# 
  1129  1E21                     	;# 
  1130  1E22                     	;# 
  1131  1E23                     	;# 
  1132  1E24                     	;# 
  1133  1E25                     	;# 
  1134  1E26                     	;# 
  1135  1E27                     	;# 
  1136  1E28                     	;# 
  1137  1E29                     	;# 
  1138  1E2A                     	;# 
  1139  1E2B                     	;# 
  1140  1E2C                     	;# 
  1141  1E2D                     	;# 
  1142  1E2E                     	;# 
  1143  1E2F                     	;# 
  1144  1E30                     	;# 
  1145  1E31                     	;# 
  1146  1E32                     	;# 
  1147  1E33                     	;# 
  1148  1E34                     	;# 
  1149  1E35                     	;# 
  1150  1E36                     	;# 
  1151  1E37                     	;# 
  1152  1E8F                     	;# 
  1153  1E90                     	;# 
  1154  1E91                     	;# 
  1155  1E92                     	;# 
  1156  1E93                     	;# 
  1157  1E9C                     	;# 
  1158  1EA1                     	;# 
  1159  1EA2                     	;# 
  1160  1EB1                     	;# 
  1161  1EBB                     	;# 
  1162  1EBC                     	;# 
  1163  1EBD                     	;# 
  1164  1EBE                     	;# 
  1165  1EC3                     	;# 
  1166  1EC5                     	;# 
  1167  1EC6                     	;# 
  1168  1EC7                     	;# 
  1169  1ECB                     	;# 
  1170  1ECC                     	;# 
  1171  1F10                     	;# 
  1172  1F11                     	;# 
  1173  1F12                     	;# 
  1174  1F13                     	;# 
  1175  1F14                     	;# 
  1176  1F15                     	;# 
  1177  1F20                     	;# 
  1178  1F21                     	;# 
  1179  1F22                     	;# 
  1180  1F23                     	;# 
  1181  1F24                     	;# 
  1182  1F25                     	;# 
  1183  1F38                     	;# 
  1184  1F39                     	;# 
  1185  1F3A                     	;# 
  1186  1F3B                     	;# 
  1187  1F3C                     	;# 
  1188  1F3D                     	;# 
  1189  1F3E                     	;# 
  1190  1F3F                     	;# 
  1191  1F4E                     	;# 
  1192  1F4F                     	;# 
  1193  1F50                     	;# 
  1194  1F51                     	;# 
  1195  1F52                     	;# 
  1196  1F53                     	;# 
  1197  1F54                     	;# 
  1198  1F55                     	;# 
  1199  1FE4                     	;# 
  1200  1FE5                     	;# 
  1201  1FE6                     	;# 
  1202  1FE7                     	;# 
  1203  1FE8                     	;# 
  1204  1FE8                     	;# 
  1205  1FE9                     	;# 
  1206  1FEA                     	;# 
  1207  1FEA                     	;# 
  1208  1FEB                     	;# 
  1209  1FED                     	;# 
  1210  1FEE                     	;# 
  1211  1FEF                     	;# 
  1212                           
  1213 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  1214  0000                     
  1215 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  1216  0000                     
  1217 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  1218  0000                     
  1219                           	psect	stringtext1
  1220  04BC                     __pstringtext1:	
  1221  04BC                     _dpowers:	
  1222  04BC  3401               	retlw	1
  1223  04BD  3400               	retlw	0
  1224  04BE  340A               	retlw	10
  1225  04BF  3400               	retlw	0
  1226  04C0  3464               	retlw	100
  1227  04C1  3400               	retlw	0
  1228  04C2  34E8               	retlw	232
  1229  04C3  3403               	retlw	3
  1230  04C4  3410               	retlw	16
  1231  04C5  3427               	retlw	39
  1232  04C6                     __end_of_dpowers:	
  1233                           
  1234                           	psect	nvBANK0
  1235  0037                     __pnvBANK0:	
  1236  0037                     _EUSART1_ErrorHandler:	
  1237  0037                     	ds	2
  1238  0039                     _EUSART1_OverrunErrorHandler:	
  1239  0039                     	ds	2
  1240  003B                     _EUSART1_FramingErrorHandler:	
  1241  003B                     	ds	2
  1242  0014                     _TRISC	set	20
  1243  0012                     _TRISA	set	18
  1244  001A                     _LATC	set	26
  1245  0018                     _LATA	set	24
  1246  001A                     _LATCbits	set	26
  1247  000C                     _PORTAbits	set	12
  1248  011A                     _TX1REG	set	282
  1249  0119                     _RC1REG	set	281
  1250  011D                     _RC1STAbits	set	285
  1251  011E                     _TX1STAbits	set	286
  1252  011C                     _SP1BRGH	set	284
  1253  011B                     _SP1BRGL	set	283
  1254  011E                     _TX1STA	set	286
  1255  011D                     _RC1STA	set	285
  1256  011F                     _BAUD1CON	set	287
  1257  070F                     _PIR3bits	set	1807
  1258  079B                     _PMD5	set	1947
  1259  079A                     _PMD4	set	1946
  1260  0799                     _PMD3	set	1945
  1261  0798                     _PMD2	set	1944
  1262  0797                     _PMD1	set	1943
  1263  0796                     _PMD0	set	1942
  1264  0892                     _OSCTUNE	set	2194
  1265  0890                     _OSCSTAT	set	2192
  1266  0893                     _OSCFRQ	set	2195
  1267  0891                     _OSCEN	set	2193
  1268  088F                     _OSCCON3	set	2191
  1269  088D                     _OSCCON1	set	2189
  1270  1ECB                     _RX1DTPPS	set	7883
  1271  1F24                     _RC4PPS	set	7972
  1272  1F52                     _INLVLC	set	8018
  1273  1F3C                     _INLVLA	set	7996
  1274  1F51                     _SLRCONC	set	8017
  1275  1F3B                     _SLRCONA	set	7995
  1276  1F50                     _ODCONC	set	8016
  1277  1F3A                     _ODCONA	set	7994
  1278  1F4F                     _WPUC	set	8015
  1279  1F39                     _WPUA	set	7993
  1280  1F38                     _ANSELA	set	7992
  1281  1F4E                     _ANSELC	set	8014
  1282                           
  1283                           	psect	stringtext2
  1284  0681                     __pstringtext2:	
  1285  0681                     STR_8:	
  1286  0681  340D               	retlw	13
  1287  0682  340A               	retlw	10
  1288  0683  340A               	retlw	10
  1289  0684  3457               	retlw	87	;'W'
  1290  0685  3465               	retlw	101	;'e'
  1291  0686  3420               	retlw	32	;' '
  1292  0687  3472               	retlw	114	;'r'
  1293  0688  3465               	retlw	101	;'e'
  1294  0689  3463               	retlw	99	;'c'
  1295  068A  3465               	retlw	101	;'e'
  1296  068B  3469               	retlw	105	;'i'
  1297  068C  3476               	retlw	118	;'v'
  1298  068D  3465               	retlw	101	;'e'
  1299  068E  3464               	retlw	100	;'d'
  1300  068F  3420               	retlw	32	;' '
  1301  0690  3461               	retlw	97	;'a'
  1302  0691  346E               	retlw	110	;'n'
  1303  0692  3420               	retlw	32	;' '
  1304  0693  3469               	retlw	105	;'i'
  1305  0694  346E               	retlw	110	;'n'
  1306  0695  3470               	retlw	112	;'p'
  1307  0696  3475               	retlw	117	;'u'
  1308  0697  3474               	retlw	116	;'t'
  1309  0698  342C               	retlw	44	;','
  1310  0699  3420               	retlw	32	;' '
  1311  069A  3474               	retlw	116	;'t'
  1312  069B  3468               	retlw	104	;'h'
  1313  069C  3465               	retlw	101	;'e'
  1314  069D  3420               	retlw	32	;' '
  1315  069E  3425               	retlw	37	;'%'
  1316  069F  3463               	retlw	99	;'c'
  1317  06A0  3425               	retlw	37	;'%'
  1318  06A1  3463               	retlw	99	;'c'
  1319  06A2  3425               	retlw	37	;'%'
  1320  06A3  3463               	retlw	99	;'c'
  1321  06A4  3420               	retlw	32	;' '
  1322  06A5  346B               	retlw	107	;'k'
  1323  06A6  3465               	retlw	101	;'e'
  1324  06A7  3479               	retlw	121	;'y'
  1325  06A8  3420               	retlw	32	;' '
  1326  06A9  3477               	retlw	119	;'w'
  1327  06AA  3461               	retlw	97	;'a'
  1328  06AB  3473               	retlw	115	;'s'
  1329  06AC  3420               	retlw	32	;' '
  1330  06AD  3470               	retlw	112	;'p'
  1331  06AE  3472               	retlw	114	;'r'
  1332  06AF  3465               	retlw	101	;'e'
  1333  06B0  3473               	retlw	115	;'s'
  1334  06B1  3473               	retlw	115	;'s'
  1335  06B2  3465               	retlw	101	;'e'
  1336  06B3  3464               	retlw	100	;'d'
  1337  06B4  342E               	retlw	46	;'.'
  1338  06B5  340D               	retlw	13
  1339  06B6  340A               	retlw	10
  1340  06B7  340A               	retlw	10
  1341  06B8  3400               	retlw	0
  1342                           
  1343                           	psect	stringtext3
  1344  05EA                     __pstringtext3:	
  1345  05EA                     STR_4:	
  1346  05EA  340D               	retlw	13
  1347  05EB  340A               	retlw	10
  1348  05EC  3428               	retlw	40	;'('
  1349  05ED  3443               	retlw	67	;'C'
  1350  05EE  3429               	retlw	41	;')'
  1351  05EF  3432               	retlw	50	;'2'
  1352  05F0  3430               	retlw	48	;'0'
  1353  05F1  3431               	retlw	49	;'1'
  1354  05F2  3439               	retlw	57	;'9'
  1355  05F3  3420               	retlw	32	;' '
  1356  05F4  344A               	retlw	74	;'J'
  1357  05F5  3461               	retlw	97	;'a'
  1358  05F6  346E               	retlw	110	;'n'
  1359  05F7  3465               	retlw	101	;'e'
  1360  05F8  346C               	retlw	108	;'l'
  1361  05F9  346C               	retlw	108	;'l'
  1362  05FA  3465               	retlw	101	;'e'
  1363  05FB  3420               	retlw	32	;' '
  1364  05FC  3444               	retlw	68	;'D'
  1365  05FD  3469               	retlw	105	;'i'
  1366  05FE  3465               	retlw	101	;'e'
  1367  05FF  3473               	retlw	115	;'s'
  1368  0600  3462               	retlw	98	;'b'
  1369  0601  3475               	retlw	117	;'u'
  1370  0602  3472               	retlw	114	;'r'
  1371  0603  3467               	retlw	103	;'g'
  1372  0604  342C               	retlw	44	;','
  1373  0605  3420               	retlw	32	;' '
  1374  0606  3452               	retlw	82	;'R'
  1375  0607  346F               	retlw	111	;'o'
  1376  0608  3477               	retlw	119	;'w'
  1377  0609  3461               	retlw	97	;'a'
  1378  060A  346E               	retlw	110	;'n'
  1379  060B  3420               	retlw	32	;' '
  1380  060C  3455               	retlw	85	;'U'
  1381  060D  346E               	retlw	110	;'n'
  1382  060E  3469               	retlw	105	;'i'
  1383  060F  3476               	retlw	118	;'v'
  1384  0610  3465               	retlw	101	;'e'
  1385  0611  3472               	retlw	114	;'r'
  1386  0612  3473               	retlw	115	;'s'
  1387  0613  3469               	retlw	105	;'i'
  1388  0614  3474               	retlw	116	;'t'
  1389  0615  3479               	retlw	121	;'y'
  1390  0616  340D               	retlw	13
  1391  0617  340A               	retlw	10
  1392  0618  340A               	retlw	10
  1393  0619  3400               	retlw	0
  1394                           
  1395                           	psect	stringtext4
  1396  059E                     __pstringtext4:	
  1397  059E                     STR_7:	
  1398  059E  3454               	retlw	84	;'T'
  1399  059F  3468               	retlw	104	;'h'
  1400  05A0  3465               	retlw	101	;'e'
  1401  05A1  3420               	retlw	32	;' '
  1402  05A2  3442               	retlw	66	;'B'
  1403  05A3  3455               	retlw	85	;'U'
  1404  05A4  3454               	retlw	84	;'T'
  1405  05A5  3454               	retlw	84	;'T'
  1406  05A6  344F               	retlw	79	;'O'
  1407  05A7  344E               	retlw	78	;'N'
  1408  05A8  3420               	retlw	32	;' '
  1409  05A9  3468               	retlw	104	;'h'
  1410  05AA  3461               	retlw	97	;'a'
  1411  05AB  3473               	retlw	115	;'s'
  1412  05AC  3420               	retlw	32	;' '
  1413  05AD  3462               	retlw	98	;'b'
  1414  05AE  3465               	retlw	101	;'e'
  1415  05AF  3465               	retlw	101	;'e'
  1416  05B0  346E               	retlw	110	;'n'
  1417  05B1  3420               	retlw	32	;' '
  1418  05B2  3472               	retlw	114	;'r'
  1419  05B3  3465               	retlw	101	;'e'
  1420  05B4  346C               	retlw	108	;'l'
  1421  05B5  3465               	retlw	101	;'e'
  1422  05B6  3461               	retlw	97	;'a'
  1423  05B7  3473               	retlw	115	;'s'
  1424  05B8  3465               	retlw	101	;'e'
  1425  05B9  3464               	retlw	100	;'d'
  1426  05BA  340D               	retlw	13
  1427  05BB  340A               	retlw	10
  1428  05BC  340A               	retlw	10
  1429  05BD  3400               	retlw	0
  1430                           
  1431                           	psect	stringtext5
  1432  057E                     __pstringtext5:	
  1433  057E                     STR_6:	
  1434  057E  340D               	retlw	13
  1435  057F  340A               	retlw	10
  1436  0580  3454               	retlw	84	;'T'
  1437  0581  3468               	retlw	104	;'h'
  1438  0582  3465               	retlw	101	;'e'
  1439  0583  3420               	retlw	32	;' '
  1440  0584  3442               	retlw	66	;'B'
  1441  0585  3455               	retlw	85	;'U'
  1442  0586  3454               	retlw	84	;'T'
  1443  0587  3454               	retlw	84	;'T'
  1444  0588  344F               	retlw	79	;'O'
  1445  0589  344E               	retlw	78	;'N'
  1446  058A  3420               	retlw	32	;' '
  1447  058B  3468               	retlw	104	;'h'
  1448  058C  3461               	retlw	97	;'a'
  1449  058D  3473               	retlw	115	;'s'
  1450  058E  3420               	retlw	32	;' '
  1451  058F  3462               	retlw	98	;'b'
  1452  0590  3465               	retlw	101	;'e'
  1453  0591  3465               	retlw	101	;'e'
  1454  0592  346E               	retlw	110	;'n'
  1455  0593  3420               	retlw	32	;' '
  1456  0594  3470               	retlw	112	;'p'
  1457  0595  3472               	retlw	114	;'r'
  1458  0596  3465               	retlw	101	;'e'
  1459  0597  3473               	retlw	115	;'s'
  1460  0598  3473               	retlw	115	;'s'
  1461  0599  3465               	retlw	101	;'e'
  1462  059A  3464               	retlw	100	;'d'
  1463  059B  340D               	retlw	13
  1464  059C  340A               	retlw	10
  1465  059D  3400               	retlw	0
  1466                           
  1467                           	psect	stringtext6
  1468  0560                     __pstringtext6:	
  1469  0560                     STR_2:	
  1470  0560  340D               	retlw	13
  1471  0561  340A               	retlw	10
  1472  0562  3409               	retlw	9
  1473  0563  3452               	retlw	82	;'R'
  1474  0564  3465               	retlw	101	;'e'
  1475  0565  3476               	retlw	118	;'v'
  1476  0566  3469               	retlw	105	;'i'
  1477  0567  3473               	retlw	115	;'s'
  1478  0568  3469               	retlw	105	;'i'
  1479  0569  346F               	retlw	111	;'o'
  1480  056A  346E               	retlw	110	;'n'
  1481  056B  3420               	retlw	32	;' '
  1482  056C  3444               	retlw	68	;'D'
  1483  056D  3461               	retlw	97	;'a'
  1484  056E  3474               	retlw	116	;'t'
  1485  056F  3465               	retlw	101	;'e'
  1486  0570  343A               	retlw	58	;':'
  1487  0571  3420               	retlw	32	;' '
  1488  0572  344E               	retlw	78	;'N'
  1489  0573  346F               	retlw	111	;'o'
  1490  0574  3476               	retlw	118	;'v'
  1491  0575  3420               	retlw	32	;' '
  1492  0576  3430               	retlw	48	;'0'
  1493  0577  3436               	retlw	54	;'6'
  1494  0578  3420               	retlw	32	;' '
  1495  0579  3432               	retlw	50	;'2'
  1496  057A  3430               	retlw	48	;'0'
  1497  057B  3431               	retlw	49	;'1'
  1498  057C  3439               	retlw	57	;'9'
  1499  057D  3400               	retlw	0
  1500                           
  1501                           	psect	stringtext7
  1502  0525                     __pstringtext7:	
  1503  0525                     STR_5:	
  1504  0525  3445               	retlw	69	;'E'
  1505  0526  346D               	retlw	109	;'m'
  1506  0527  3462               	retlw	98	;'b'
  1507  0528  3465               	retlw	101	;'e'
  1508  0529  3464               	retlw	100	;'d'
  1509  052A  3464               	retlw	100	;'d'
  1510  052B  3465               	retlw	101	;'e'
  1511  052C  3464               	retlw	100	;'d'
  1512  052D  3420               	retlw	32	;' '
  1513  052E  3443               	retlw	67	;'C'
  1514  052F  346C               	retlw	108	;'l'
  1515  0530  3461               	retlw	97	;'a'
  1516  0531  3473               	retlw	115	;'s'
  1517  0532  3473               	retlw	115	;'s'
  1518  0533  3420               	retlw	32	;' '
  1519  0534  3450               	retlw	80	;'P'
  1520  0535  3472               	retlw	114	;'r'
  1521  0536  346F               	retlw	111	;'o'
  1522  0537  346A               	retlw	106	;'j'
  1523  0538  3465               	retlw	101	;'e'
  1524  0539  3463               	retlw	99	;'c'
  1525  053A  3474               	retlw	116	;'t'
  1526  053B  3420               	retlw	32	;' '
  1527  053C  3425               	retlw	37	;'%'
  1528  053D  3464               	retlw	100	;'d'
  1529  053E  3420               	retlw	32	;' '
  1530  053F  340A               	retlw	10
  1531  0540  340D               	retlw	13
  1532  0541  3400               	retlw	0
  1533                           
  1534                           	psect	stringtext8
  1535  0509                     __pstringtext8:	
  1536  0509                     STR_1:	
  1537  0509  340C               	retlw	12
  1538  050A  3445               	retlw	69	;'E'
  1539  050B  346D               	retlw	109	;'m'
  1540  050C  3462               	retlw	98	;'b'
  1541  050D  3465               	retlw	101	;'e'
  1542  050E  3464               	retlw	100	;'d'
  1543  050F  3464               	retlw	100	;'d'
  1544  0510  3465               	retlw	101	;'e'
  1545  0511  3464               	retlw	100	;'d'
  1546  0512  3420               	retlw	32	;' '
  1547  0513  3450               	retlw	80	;'P'
  1548  0514  3443               	retlw	67	;'C'
  1549  0515  3442               	retlw	66	;'B'
  1550  0516  3420               	retlw	32	;' '
  1551  0517  3443               	retlw	67	;'C'
  1552  0518  346C               	retlw	108	;'l'
  1553  0519  3461               	retlw	97	;'a'
  1554  051A  3473               	retlw	115	;'s'
  1555  051B  3473               	retlw	115	;'s'
  1556  051C  3420               	retlw	32	;' '
  1557  051D  3450               	retlw	80	;'P'
  1558  051E  3472               	retlw	114	;'r'
  1559  051F  346F               	retlw	111	;'o'
  1560  0520  346A               	retlw	106	;'j'
  1561  0521  3465               	retlw	101	;'e'
  1562  0522  3463               	retlw	99	;'c'
  1563  0523  3474               	retlw	116	;'t'
  1564  0524  3400               	retlw	0
  1565                           
  1566                           	psect	stringtext9
  1567  04D2                     __pstringtext9:	
  1568  04D2                     STR_3:	
  1569  04D2  340D               	retlw	13
  1570  04D3  340A               	retlw	10
  1571  04D4  3409               	retlw	9
  1572  04D5  3452               	retlw	82	;'R'
  1573  04D6  3465               	retlw	101	;'e'
  1574  04D7  3476               	retlw	118	;'v'
  1575  04D8  3469               	retlw	105	;'i'
  1576  04D9  3473               	retlw	115	;'s'
  1577  04DA  3469               	retlw	105	;'i'
  1578  04DB  346F               	retlw	111	;'o'
  1579  04DC  346E               	retlw	110	;'n'
  1580  04DD  3420               	retlw	32	;' '
  1581  04DE  3454               	retlw	84	;'T'
  1582  04DF  3469               	retlw	105	;'i'
  1583  04E0  346D               	retlw	109	;'m'
  1584  04E1  3465               	retlw	101	;'e'
  1585  04E2  343A               	retlw	58	;':'
  1586  04E3  3420               	retlw	32	;' '
  1587  04E4  3431               	retlw	49	;'1'
  1588  04E5  3431               	retlw	49	;'1'
  1589  04E6  343A               	retlw	58	;':'
  1590  04E7  3434               	retlw	52	;'4'
  1591  04E8  3435               	retlw	53	;'5'
  1592  04E9  343A               	retlw	58	;':'
  1593  04EA  3434               	retlw	52	;'4'
  1594  04EB  3432               	retlw	50	;'2'
  1595  04EC  3400               	retlw	0
  1596                           
  1597                           	psect	stringtext10
  1598  0000                     __pstringtext10:	
  1599                           
  1600                           ; #config settings
  1601  0000                     
  1602                           	psect	cinit
  1603  07FC                     start_initialization:	
  1604  07FC                     __initialization:	
  1605                           
  1606                           ; Clear objects allocated to BANK0
  1607  07FC  0140               	movlb	0	; select bank0
  1608  07FD  01BD               	clrf	__pbssBANK0& (0+127)
  1609  07FE                     end_of_initialization:	
  1610                           ;End of C runtime variable initialization code
  1611                           
  1612  07FE                     __end_of__initialization:	
  1613  07FE  0140               	movlb	0
  1614  07FF  2EB9               	ljmp	_main	;jump to C main() function
  1615                           
  1616                           	psect	bssBANK0
  1617  003D                     __pbssBANK0:	
  1618  003D                     _eusart1RxLastError:	
  1619  003D                     	ds	1
  1620                           
  1621                           	psect	cstackCOMMON
  1622  0070                     __pcstackCOMMON:	
  1623  0070                     ?_SYSTEM_Initialize:	
  1624  0070                     ?_EUSART1_is_rx_ready:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ??_EUSART1_is_rx_ready:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ?_EUSART1_Read:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ??_EUSART1_Read:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_EUSART1_SetFramingErrorHandler:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     ?_EUSART1_SetErrorHandler:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     ?_PMD_Initialize:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0070                     ??_PMD_Initialize:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0070                     ?_PIN_MANAGER_Initialize:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654  0070                     ??_PIN_MANAGER_Initialize:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657  0070                     ?_OSCILLATOR_Initialize:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660  0070                     ??_OSCILLATOR_Initialize:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663  0070                     ?_my_wait:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666  0070                     ??_my_wait:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669  0070                     ?_main:	
  1670                           ; 1 bytes @ 0x0
  1671                           
  1672  0070                     ?_EUSART1_Initialize:	
  1673                           ; 1 bytes @ 0x0
  1674                           
  1675  0070                     ?_EUSART1_Write:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0070                     ??_EUSART1_Write:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681  0070                     ?_putch:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684  0070                     ?___lwdiv:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687  0070                     EUSART1_Write@txData:	
  1688                           ; 2 bytes @ 0x0
  1689                           
  1690  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  1694                           ; 2 bytes @ 0x0
  1695                           
  1696  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  1697                           ; 2 bytes @ 0x0
  1698                           
  1699  0070                     ___lwdiv@divisor:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0x0
  1704  0070                     	ds	1
  1705  0071                     ??_putch:	
  1706  0071                     putch@txData:	
  1707                           ; 1 bytes @ 0x1
  1708                           
  1709  0071                     my_wait@l:	
  1710                           ; 1 bytes @ 0x1
  1711                           
  1712                           
  1713                           ; 2 bytes @ 0x1
  1714  0071                     	ds	1
  1715  0072                     ??_SYSTEM_Initialize:	
  1716  0072                     ??_EUSART1_SetFramingErrorHandler:	
  1717                           ; 1 bytes @ 0x2
  1718                           
  1719  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  1720                           ; 1 bytes @ 0x2
  1721                           
  1722  0072                     ??_EUSART1_SetErrorHandler:	
  1723                           ; 1 bytes @ 0x2
  1724                           
  1725  0072                     ??_EUSART1_Initialize:	
  1726                           ; 1 bytes @ 0x2
  1727                           
  1728  0072                     ___lwdiv@dividend:	
  1729                           ; 1 bytes @ 0x2
  1730                           
  1731                           
  1732                           ; 2 bytes @ 0x2
  1733  0072                     	ds	1
  1734  0073                     my_wait@my_time:	
  1735                           
  1736                           ; 1 bytes @ 0x3
  1737  0073                     	ds	1
  1738  0074                     ??___lwdiv:	
  1739  0074                     my_wait@j:	
  1740                           ; 1 bytes @ 0x4
  1741                           
  1742                           
  1743                           ; 2 bytes @ 0x4
  1744  0074                     	ds	1
  1745  0075                     ___lwdiv@quotient:	
  1746                           
  1747                           ; 2 bytes @ 0x5
  1748  0075                     	ds	1
  1749  0076                     my_wait@k:	
  1750                           
  1751                           ; 2 bytes @ 0x6
  1752  0076                     	ds	1
  1753  0077                     ___lwdiv@counter:	
  1754                           
  1755                           ; 1 bytes @ 0x7
  1756  0077                     	ds	1
  1757  0078                     ?___lwmod:	
  1758  0078                     ___lwmod@divisor:	
  1759                           ; 2 bytes @ 0x8
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x8
  1763  0078                     	ds	2
  1764  007A                     ___lwmod@dividend:	
  1765                           
  1766                           ; 2 bytes @ 0xA
  1767  007A                     	ds	2
  1768  007C                     ??___lwmod:	
  1769                           
  1770                           ; 1 bytes @ 0xC
  1771  007C                     	ds	1
  1772  007D                     ___lwmod@counter:	
  1773                           
  1774                           ; 1 bytes @ 0xD
  1775  007D                     	ds	1
  1776                           
  1777                           	psect	cstackBANK0
  1778  0020                     __pcstackBANK0:	
  1779  0020                     ?_printf:	
  1780  0020                     printf@f:	
  1781                           ; 2 bytes @ 0x0
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x0
  1785  0020                     	ds	8
  1786  0028                     ??_printf:	
  1787                           
  1788                           ; 1 bytes @ 0x8
  1789  0028                     	ds	4
  1790  002C                     printf@flag:	
  1791                           
  1792                           ; 1 bytes @ 0xC
  1793  002C                     	ds	1
  1794  002D                     printf@prec:	
  1795                           
  1796                           ; 1 bytes @ 0xD
  1797  002D                     	ds	1
  1798  002E                     printf@ap:	
  1799                           
  1800                           ; 1 bytes @ 0xE
  1801  002E                     	ds	1
  1802  002F                     printf@val:	
  1803                           
  1804                           ; 2 bytes @ 0xF
  1805  002F                     	ds	2
  1806  0031                     printf@c:	
  1807                           
  1808                           ; 1 bytes @ 0x11
  1809  0031                     	ds	1
  1810  0032                     ??_main:	
  1811                           
  1812                           ; 1 bytes @ 0x12
  1813  0032                     	ds	2
  1814  0034                     main@cnt:	
  1815                           
  1816                           ; 2 bytes @ 0x14
  1817  0034                     	ds	2
  1818  0036                     main@input:	
  1819                           
  1820                           ; 1 bytes @ 0x16
  1821  0036                     	ds	1
  1822                           
  1823                           	psect	maintext
  1824  06B9                     __pmaintext:	
  1825 ;;
  1826 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1827 ;;
  1828 ;; *************** function _main *****************
  1829 ;; Defined at:
  1830 ;;		line 37 in file "main.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  cnt             2   20[BANK0 ] int 
  1835 ;;  input           1   22[BANK0 ] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : B3F/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1845 ;;      Params:         0       0       0       0
  1846 ;;      Locals:         0       3       0       0
  1847 ;;      Temps:          0       2       0       0
  1848 ;;      Totals:         0       5       0       0
  1849 ;;Total ram usage:        5 bytes
  1850 ;; Hardware stack levels required when called:    3
  1851 ;; This function calls:
  1852 ;;		_EUSART1_Read
  1853 ;;		_EUSART1_is_rx_ready
  1854 ;;		_SYSTEM_Initialize
  1855 ;;		_my_wait
  1856 ;;		_printf
  1857 ;; This function is called by:
  1858 ;;		Startup code after reset
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _main
  1864  06B9                     _main:	
  1865                           
  1866                           ;main.c: 39: int cnt = 0;
  1867                           
  1868                           ;incstack = 0
  1869                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1870  06B9  0140               	movlb	0	; select bank0
  1871  06BA  01B4               	clrf	main@cnt
  1872  06BB  01B5               	clrf	main@cnt+1
  1873                           
  1874                           ;main.c: 40: unsigned char input;
  1875                           ;main.c: 42: SYSTEM_Initialize();
  1876  06BC  248B               	fcall	_SYSTEM_Initialize
  1877                           
  1878                           ;main.c: 44: printf("\fEmbedded PCB Class Project");
  1879  06BD  3009               	movlw	low (STR_1| (0+32768))
  1880  06BE  0140               	movlb	0	; select bank0
  1881  06BF  00A0               	movwf	printf@f
  1882  06C0  3085               	movlw	high (STR_1| (0+32768))
  1883  06C1  00A1               	movwf	printf@f+1
  1884  06C2  273B               	fcall	_printf
  1885                           
  1886                           ;main.c: 45: printf("\r\n\tRevision Date: " "Nov 06 2019");
  1887  06C3  3060               	movlw	low (STR_2| (0+32768))
  1888  06C4  0140               	movlb	0	; select bank0
  1889  06C5  00A0               	movwf	printf@f
  1890  06C6  3085               	movlw	high (STR_2| (0+32768))
  1891  06C7  00A1               	movwf	printf@f+1
  1892  06C8  273B               	fcall	_printf
  1893                           
  1894                           ;main.c: 46: printf("\r\n\tRevision Time: " "11:45:42");
  1895  06C9  30D2               	movlw	low (STR_3| (0+32768))
  1896  06CA  0140               	movlb	0	; select bank0
  1897  06CB  00A0               	movwf	printf@f
  1898  06CC  3084               	movlw	high (STR_3| (0+32768))
  1899  06CD  00A1               	movwf	printf@f+1
  1900  06CE  273B               	fcall	_printf
  1901                           
  1902                           ;main.c: 47: printf("\r\n(C)2019 Janelle Diesburg, Rowan University\r\n\n");
  1903  06CF  30EA               	movlw	low (STR_4| (0+32768))
  1904  06D0  0140               	movlb	0	; select bank0
  1905  06D1  00A0               	movwf	printf@f
  1906  06D2  3085               	movlw	high (STR_4| (0+32768))
  1907  06D3  00A1               	movwf	printf@f+1
  1908  06D4                     L1:	
  1909  06D4  273B               	fcall	_printf
  1910  06D5                     l1122:	
  1911                           ;main.c: 49: while (1)
  1912                           
  1913                           
  1914                           ;main.c: 50: {
  1915                           ;main.c: 51: if (PORTAbits.RA2==1)
  1916  06D5  0140               	movlb	0	; select bank0
  1917  06D6  1D0C               	btfss	12,2	;volatile
  1918  06D7  2F03               	goto	l1168
  1919                           
  1920                           ;main.c: 52: {
  1921                           ;main.c: 53: printf ("Embedded Class Project %d \n\r", cnt);
  1922  06D8  3025               	movlw	low (STR_5| (0+32768))
  1923  06D9  00A0               	movwf	printf@f
  1924  06DA  3085               	movlw	high (STR_5| (0+32768))
  1925  06DB  00A1               	movwf	printf@f+1
  1926  06DC  0835               	movf	main@cnt+1,w
  1927  06DD  00A3               	movwf	?_printf+3
  1928  06DE  0834               	movf	main@cnt,w
  1929  06DF  00A2               	movwf	?_printf+2
  1930  06E0  273B               	fcall	_printf
  1931                           
  1932                           ;main.c: 54: LATCbits.LATC0 = 1;
  1933  06E1  0140               	movlb	0	; select bank0
  1934  06E2  141A               	bsf	26,0	;volatile
  1935                           
  1936                           ;main.c: 55: LATCbits.LATC1 = 0;
  1937  06E3  109A               	bcf	26,1	;volatile
  1938                           
  1939                           ;main.c: 56: LATCbits.LATC2 = 0;
  1940  06E4  111A               	bcf	26,2	;volatile
  1941                           
  1942                           ;main.c: 57: LATCbits.LATC3 = 0;
  1943  06E5  119A               	bcf	26,3	;volatile
  1944                           
  1945                           ;main.c: 58: my_wait(30);
  1946  06E6  301E               	movlw	30
  1947  06E7  261A               	fcall	_my_wait
  1948                           
  1949                           ;main.c: 59: LATCbits.LATC0 = 0;
  1950  06E8  0140               	movlb	0	; select bank0
  1951  06E9  101A               	bcf	26,0	;volatile
  1952                           
  1953                           ;main.c: 60: LATCbits.LATC1 = 1;
  1954  06EA  149A               	bsf	26,1	;volatile
  1955                           
  1956                           ;main.c: 61: LATCbits.LATC2 = 0;
  1957  06EB  111A               	bcf	26,2	;volatile
  1958                           
  1959                           ;main.c: 62: LATCbits.LATC3 = 0;
  1960  06EC  119A               	bcf	26,3	;volatile
  1961                           
  1962                           ;main.c: 63: my_wait(30);
  1963  06ED  301E               	movlw	30
  1964  06EE  261A               	fcall	_my_wait
  1965                           
  1966                           ;main.c: 64: LATCbits.LATC0 = 0;
  1967  06EF  0140               	movlb	0	; select bank0
  1968  06F0  101A               	bcf	26,0	;volatile
  1969                           
  1970                           ;main.c: 65: LATCbits.LATC1 = 0;
  1971  06F1  109A               	bcf	26,1	;volatile
  1972                           
  1973                           ;main.c: 66: LATCbits.LATC2 = 1;
  1974  06F2  151A               	bsf	26,2	;volatile
  1975                           
  1976                           ;main.c: 67: LATCbits.LATC3 = 0;
  1977  06F3  119A               	bcf	26,3	;volatile
  1978                           
  1979                           ;main.c: 68: my_wait(30);
  1980  06F4  301E               	movlw	30
  1981  06F5  261A               	fcall	_my_wait
  1982                           
  1983                           ;main.c: 69: LATCbits.LATC0 = 0;
  1984  06F6  0140               	movlb	0	; select bank0
  1985  06F7  101A               	bcf	26,0	;volatile
  1986                           
  1987                           ;main.c: 70: LATCbits.LATC1 = 0;
  1988  06F8  109A               	bcf	26,1	;volatile
  1989                           
  1990                           ;main.c: 71: LATCbits.LATC2 = 0;
  1991  06F9  111A               	bcf	26,2	;volatile
  1992                           
  1993                           ;main.c: 72: LATCbits.LATC3 = 1;
  1994  06FA  159A               	bsf	26,3	;volatile
  1995                           
  1996                           ;main.c: 73: my_wait(30);
  1997  06FB  301E               	movlw	30
  1998  06FC  261A               	fcall	_my_wait
  1999                           
  2000                           ;main.c: 74: cnt++;
  2001  06FD  3001               	movlw	1
  2002  06FE  0140               	movlb	0	; select bank0
  2003  06FF  07B4               	addwf	main@cnt,f
  2004  0700  3000               	movlw	0
  2005  0701  3DB5               	addwfc	main@cnt+1,f
  2006                           
  2007                           ;main.c: 75: }
  2008  0702  2F1E               	goto	l1184
  2009  0703                     l1168:	
  2010                           
  2011                           ;main.c: 76: else
  2012                           ;main.c: 77: {
  2013                           ;main.c: 78: printf("\r\nThe BUTTON has been pressed\r\n");
  2014  0703  307E               	movlw	low (STR_6| (0+32768))
  2015  0704  00A0               	movwf	printf@f
  2016  0705  3085               	movlw	high (STR_6| (0+32768))
  2017  0706  00A1               	movwf	printf@f+1
  2018  0707  273B               	fcall	_printf
  2019  0708                     l1180:	
  2020                           ;main.c: 79: while (PORTAbits.RA2==0)
  2021                           
  2022  0708  0140               	movlb	0	; select bank0
  2023  0709  190C               	btfsc	12,2	;volatile
  2024  070A  2F19               	goto	l1182
  2025                           
  2026                           ;main.c: 80: {
  2027                           ;main.c: 81: LATCbits.LATC0 = 0;
  2028  070B  101A               	bcf	26,0	;volatile
  2029                           
  2030                           ;main.c: 82: LATCbits.LATC1 = 0;
  2031  070C  109A               	bcf	26,1	;volatile
  2032                           
  2033                           ;main.c: 83: LATCbits.LATC2 = 1;
  2034  070D  151A               	bsf	26,2	;volatile
  2035                           
  2036                           ;main.c: 84: LATCbits.LATC3 = 1;
  2037  070E  159A               	bsf	26,3	;volatile
  2038                           
  2039                           ;main.c: 85: my_wait(45);
  2040  070F  302D               	movlw	45
  2041  0710  261A               	fcall	_my_wait
  2042                           
  2043                           ;main.c: 86: LATCbits.LATC0 = 1;
  2044  0711  0140               	movlb	0	; select bank0
  2045  0712  141A               	bsf	26,0	;volatile
  2046                           
  2047                           ;main.c: 87: LATCbits.LATC1 = 1;
  2048  0713  149A               	bsf	26,1	;volatile
  2049                           
  2050                           ;main.c: 88: LATCbits.LATC2 = 0;
  2051  0714  111A               	bcf	26,2	;volatile
  2052                           
  2053                           ;main.c: 89: LATCbits.LATC3 = 0;
  2054  0715  119A               	bcf	26,3	;volatile
  2055                           
  2056                           ;main.c: 90: my_wait(45);
  2057  0716  302D               	movlw	45
  2058  0717  261A               	fcall	_my_wait
  2059  0718  2F08               	goto	l1180
  2060  0719                     l1182:	
  2061                           
  2062                           ;main.c: 91: }
  2063                           ;main.c: 92: printf("The BUTTON has been released\r\n\n");
  2064  0719  309E               	movlw	low (STR_7| (0+32768))
  2065  071A  00A0               	movwf	printf@f
  2066  071B  3085               	movlw	high (STR_7| (0+32768))
  2067  071C  00A1               	movwf	printf@f+1
  2068  071D  273B               	fcall	_printf
  2069  071E                     l1184:	
  2070                           
  2071                           ;main.c: 93: }
  2072                           ;main.c: 94: if((EUSART1_is_rx_ready()))
  2073  071E  2486               	fcall	_EUSART1_is_rx_ready
  2074  071F  3A00               	xorlw	0
  2075  0720  1903               	skipnz
  2076  0721  2ED5               	goto	l1122
  2077                           
  2078                           ;main.c: 95: {
  2079                           ;main.c: 96: input = EUSART1_Read();
  2080  0722  24C6               	fcall	_EUSART1_Read
  2081  0723  0140               	movlb	0	; select bank0
  2082  0724  00B2               	movwf	??_main
  2083  0725  0832               	movf	??_main,w
  2084  0726  00B6               	movwf	main@input
  2085                           
  2086                           ;main.c: 97: printf("\r\n\nWe received an input, the %c%c%c key was pressed.\r\n\n", 0x2
      +                          2, input, 0x22);
  2087  0727  3081               	movlw	low (STR_8| (0+32768))
  2088  0728  00A0               	movwf	printf@f
  2089  0729  3086               	movlw	high (STR_8| (0+32768))
  2090  072A  00A1               	movwf	printf@f+1
  2091  072B  3022               	movlw	34
  2092  072C  00A2               	movwf	?_printf+2
  2093  072D  3000               	movlw	0
  2094  072E  00A3               	movwf	?_printf+3
  2095  072F  0836               	movf	main@input,w
  2096  0730  00B2               	movwf	??_main
  2097  0731  01B3               	clrf	??_main+1
  2098  0732  0832               	movf	??_main,w
  2099  0733  00A4               	movwf	?_printf+4
  2100  0734  0833               	movf	??_main+1,w
  2101  0735  00A5               	movwf	?_printf+5
  2102  0736  3022               	movlw	34
  2103  0737  00A6               	movwf	?_printf+6
  2104  0738  3000               	movlw	0
  2105  0739  00A7               	movwf	?_printf+7
  2106  073A  2ED4               	goto	L1
  2107  073B                     __end_of_main:	
  2108                           
  2109                           	psect	text1
  2110  073B                     __ptext1:	
  2111 ;; *************** function _printf *****************
  2112 ;; Defined at:
  2113 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2116 ;;		 -> STR_8(56), STR_7(32), STR_6(32), STR_5(29), 
  2117 ;;		 -> STR_4(48), STR_3(27), STR_2(30), STR_1(28), 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  tmpval          4    0        struct .
  2120 ;;  val             2   15[BANK0 ] unsigned int 
  2121 ;;  cp              2    0        PTR const unsigned char 
  2122 ;;  len             2    0        unsigned int 
  2123 ;;  c               1   17[BANK0 ] char 
  2124 ;;  ap              1   14[BANK0 ] PTR void [1]
  2125 ;;		 -> ?_printf(2), 
  2126 ;;  prec            1   13[BANK0 ] char 
  2127 ;;  flag            1   12[BANK0 ] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    0[BANK0 ] int 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2137 ;;      Params:         0       8       0       0
  2138 ;;      Locals:         0       6       0       0
  2139 ;;      Temps:          0       4       0       0
  2140 ;;      Totals:         0      18       0       0
  2141 ;;Total ram usage:       18 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    2
  2144 ;; This function calls:
  2145 ;;		___lwdiv
  2146 ;;		___lwmod
  2147 ;;		_putch
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _printf
  2155  073B                     _printf:	
  2156                           
  2157                           ;doprnt.c: 466: va_list ap;
  2158                           ;doprnt.c: 499: signed char c;
  2159                           ;doprnt.c: 506: signed char prec;
  2160                           ;doprnt.c: 508: unsigned char flag;
  2161                           ;doprnt.c: 523: union {
  2162                           ;doprnt.c: 524: unsigned long vd;
  2163                           ;doprnt.c: 525: double integ;
  2164                           ;doprnt.c: 526: } tmpval;
  2165                           ;doprnt.c: 528: unsigned int val;
  2166                           ;doprnt.c: 529: unsigned len;
  2167                           ;doprnt.c: 530: const char * cp;
  2168                           ;doprnt.c: 533: *ap = __va_start();
  2169                           
  2170                           ;incstack = 0
  2171                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2172  073B  3022               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2173  073C  0140               	movlb	0	; select bank0
  2174  073D  00A8               	movwf	??_printf
  2175  073E  0828               	movf	??_printf,w
  2176  073F  00AE               	movwf	printf@ap
  2177  0740                     l1092:	
  2178                           ;doprnt.c: 536: while(c = *f++) {
  2179                           
  2180  0740  0140               	movlb	0	; select bank0
  2181  0741  0821               	movf	printf@f+1,w
  2182  0742  00A9               	movwf	??_printf+1
  2183  0743  0820               	movf	printf@f,w
  2184  0744  00A8               	movwf	??_printf
  2185  0745  0AA0               	incf	printf@f,f
  2186  0746  1903               	skipnz
  2187  0747  0AA1               	incf	printf@f+1,f
  2188  0748  0828               	movf	??_printf,w
  2189  0749  0084               	movwf	4
  2190  074A  0829               	movf	??_printf+1,w
  2191  074B  0085               	movwf	5
  2192  074C  0800               	movf	0,w	;code access
  2193  074D  00AA               	movwf	??_printf+2
  2194  074E  082A               	movf	??_printf+2,w
  2195  074F  00B1               	movwf	printf@c
  2196  0750  0831               	movf	printf@c,w
  2197  0751  1903               	btfsc	3,2
  2198  0752  0008               	return
  2199                           
  2200                           ;doprnt.c: 538: if(c != '%')
  2201  0753  3025               	movlw	37
  2202  0754  0631               	xorwf	printf@c,w
  2203  0755  1903               	btfsc	3,2
  2204  0756  2F5A               	goto	l1046
  2205                           
  2206                           ;doprnt.c: 540: {
  2207                           ;doprnt.c: 541: (putch(c) );
  2208  0757  0831               	movf	printf@c,w
  2209  0758  2482               	fcall	_putch
  2210                           
  2211                           ;doprnt.c: 542: continue;
  2212  0759  2F40               	goto	l1092
  2213  075A                     l1046:	
  2214                           
  2215                           ;doprnt.c: 543: }
  2216                           ;doprnt.c: 548: flag = 0;
  2217  075A  0140               	movlb	0	; select bank0
  2218  075B  01AC               	clrf	printf@flag
  2219                           
  2220                           ;doprnt.c: 635: switch(c = *f++) {
  2221  075C  2F6B               	goto	l1056
  2222  075D                     l1048:	
  2223                           ;doprnt.c: 784: case 'c':
  2224                           
  2225                           ;doprnt.c: 698: case 'i':
  2226                           ;doprnt.c: 699: break;
  2227                           
  2228                           ;doprnt.c: 697: case 'd':
  2229                           
  2230                           ;doprnt.c: 638: goto alldone;
  2231                           
  2232                           ;doprnt.c: 637: case 0:
  2233                           
  2234                           
  2235                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  2236  075D  082E               	movf	printf@ap,w
  2237  075E  0086               	movwf	6
  2238  075F  0187               	clrf	7
  2239  0760  0801               	movf	1,w
  2240  0761  00A8               	movwf	??_printf
  2241  0762  0828               	movf	??_printf,w
  2242  0763  00B1               	movwf	printf@c
  2243  0764  3002               	movlw	2
  2244  0765  00A8               	movwf	??_printf
  2245  0766  0828               	movf	??_printf,w
  2246  0767  07AE               	addwf	printf@ap,f
  2247  0768                     l1052:	
  2248                           ;doprnt.c: 802: default:
  2249                           
  2250                           
  2251                           ;doprnt.c: 809: (putch(c) );
  2252  0768  0831               	movf	printf@c,w
  2253  0769  2482               	fcall	_putch
  2254                           
  2255                           ;doprnt.c: 810: continue;
  2256  076A  2F40               	goto	l1092
  2257  076B                     l1056:	
  2258                           ;doprnt.c: 822: }
  2259                           
  2260  076B  0140               	movlb	0	; select bank0
  2261  076C  0821               	movf	printf@f+1,w
  2262  076D  00A9               	movwf	??_printf+1
  2263  076E  0820               	movf	printf@f,w
  2264  076F  00A8               	movwf	??_printf
  2265  0770  0AA0               	incf	printf@f,f
  2266  0771  1903               	skipnz
  2267  0772  0AA1               	incf	printf@f+1,f
  2268  0773  0828               	movf	??_printf,w
  2269  0774  0084               	movwf	4
  2270  0775  0829               	movf	??_printf+1,w
  2271  0776  0085               	movwf	5
  2272  0777  0800               	movf	0,w	;code access
  2273  0778  00B1               	movwf	printf@c
  2274                           
  2275                           ; Switch size 1, requested type "space"
  2276                           ; Number of cases is 4, Range of values is 0 to 105
  2277                           ; switch strategies available:
  2278                           ; Name         Instructions Cycles
  2279                           ; simple_byte           13     7 (average)
  2280                           ; direct_byte          218     6 (fixed)
  2281                           ; jumptable            260     6 (fixed)
  2282                           ;	Chosen strategy is simple_byte
  2283  0779  3A00               	xorlw	0	; case 0
  2284  077A  1903               	skipnz
  2285  077B  2FFB               	goto	l238
  2286  077C  3A63               	xorlw	99	; case 99
  2287  077D  1903               	skipnz
  2288  077E  2F5D               	goto	l1048
  2289  077F  3A07               	xorlw	7	; case 100
  2290  0780  1903               	skipnz
  2291  0781  2F86               	goto	l1058
  2292  0782  3A0D               	xorlw	13	; case 105
  2293  0783  1903               	skipnz
  2294  0784  2F86               	goto	l1058
  2295  0785  2F68               	goto	l1052
  2296  0786                     l1058:	
  2297                           
  2298                           ;doprnt.c: 1253: {
  2299                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2300  0786  0140               	movlb	0	; select bank0
  2301  0787  082E               	movf	printf@ap,w
  2302  0788  0086               	movwf	6
  2303  0789  0187               	clrf	7
  2304  078A  3F40               	moviw [0]fsr1
  2305  078B  00AF               	movwf	printf@val
  2306  078C  3F41               	moviw [1]fsr1
  2307  078D  00B0               	movwf	printf@val+1
  2308  078E  3002               	movlw	2
  2309  078F  00A8               	movwf	??_printf
  2310  0790  0828               	movf	??_printf,w
  2311  0791  07AE               	addwf	printf@ap,f
  2312                           
  2313                           ;doprnt.c: 1261: if((int)val < 0) {
  2314  0792  1FB0               	btfss	printf@val+1,7
  2315  0793  2F9D               	goto	l1068
  2316                           
  2317                           ;doprnt.c: 1262: flag |= 0x03;
  2318  0794  3003               	movlw	3
  2319  0795  00A8               	movwf	??_printf
  2320  0796  0828               	movf	??_printf,w
  2321  0797  04AC               	iorwf	printf@flag,f
  2322                           
  2323                           ;doprnt.c: 1263: val = -val;
  2324  0798  09AF               	comf	printf@val,f
  2325  0799  09B0               	comf	printf@val+1,f
  2326  079A  0AAF               	incf	printf@val,f
  2327  079B  1903               	skipnz
  2328  079C  0AB0               	incf	printf@val+1,f
  2329  079D                     l1068:	
  2330                           
  2331                           ;doprnt.c: 1264: }
  2332                           ;doprnt.c: 1266: }
  2333                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2334  079D  01B1               	clrf	printf@c
  2335  079E  0AB1               	incf	printf@c,f
  2336  079F  3005               	movlw	5
  2337  07A0  0631               	xorwf	printf@c,w
  2338  07A1  1903               	btfsc	3,2
  2339  07A2  2FC2               	goto	l1080
  2340  07A3                     l1074:	
  2341                           
  2342                           ;doprnt.c: 1306: if(val < dpowers[c])
  2343  07A3  0831               	movf	printf@c,w
  2344  07A4  00A8               	movwf	??_printf
  2345  07A5  01A9               	clrf	??_printf+1
  2346  07A6  35A8               	lslf	??_printf,f
  2347  07A7  0DA9               	rlf	??_printf+1,f
  2348  07A8  30BC               	movlw	low (_dpowers| (0+32768))
  2349  07A9  0728               	addwf	??_printf,w
  2350  07AA  0084               	movwf	4
  2351  07AB  3084               	movlw	high (_dpowers| (0+32768))
  2352  07AC  3D29               	addwfc	??_printf+1,w
  2353  07AD  0085               	movwf	5
  2354  07AE  3F00               	moviw [0]fsr0
  2355  07AF  00AA               	movwf	??_printf+2
  2356  07B0  3F01               	moviw [1]fsr0
  2357  07B1  00AB               	movwf	??_printf+3
  2358  07B2  082B               	movf	??_printf+3,w
  2359  07B3  0230               	subwf	printf@val+1,w
  2360  07B4  1D03               	skipz
  2361  07B5  2FB8               	goto	u535
  2362  07B6  082A               	movf	??_printf+2,w
  2363  07B7  022F               	subwf	printf@val,w
  2364  07B8                     u535:	
  2365  07B8  1C03               	btfss	3,0
  2366  07B9  2FC2               	goto	l1080
  2367                           
  2368                           ;doprnt.c: 1307: break;
  2369  07BA  3001               	movlw	1
  2370  07BB  00A8               	movwf	??_printf
  2371  07BC  0828               	movf	??_printf,w
  2372  07BD  07B1               	addwf	printf@c,f
  2373  07BE  3005               	movlw	5
  2374  07BF  0631               	xorwf	printf@c,w
  2375  07C0  1D03               	btfss	3,2
  2376  07C1  2FA3               	goto	l1074
  2377  07C2                     l1080:	
  2378                           
  2379                           ;doprnt.c: 1422: {
  2380                           ;doprnt.c: 1438: if(flag & 0x03)
  2381  07C2  082C               	movf	printf@flag,w
  2382  07C3  3903               	andlw	3
  2383  07C4  1903               	btfsc	3,2
  2384  07C5  2FC8               	goto	l1084
  2385                           
  2386                           ;doprnt.c: 1439: (putch('-') );
  2387  07C6  302D               	movlw	45
  2388  07C7  2482               	fcall	_putch
  2389  07C8                     l1084:	
  2390                           
  2391                           ;doprnt.c: 1469: }
  2392                           ;doprnt.c: 1472: prec = c;
  2393  07C8  0140               	movlb	0	; select bank0
  2394  07C9  0831               	movf	printf@c,w
  2395  07CA  00A8               	movwf	??_printf
  2396  07CB  0828               	movf	??_printf,w
  2397  07CC  00AD               	movwf	printf@prec
  2398  07CD                     l1090:	
  2399                           ;doprnt.c: 1474: while(prec--) {
  2400                           
  2401  07CD  30FF               	movlw	255
  2402  07CE  0140               	movlb	0	; select bank0
  2403  07CF  00A8               	movwf	??_printf
  2404  07D0  0828               	movf	??_printf,w
  2405  07D1  07AD               	addwf	printf@prec,f
  2406  07D2  0A2D               	incf	printf@prec,w
  2407  07D3  1903               	btfsc	3,2
  2408  07D4  2F40               	goto	l1092
  2409                           
  2410                           ;doprnt.c: 1478: {
  2411                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2412  07D5  300A               	movlw	10
  2413  07D6  00F8               	movwf	___lwmod@divisor
  2414  07D7  3000               	movlw	0
  2415  07D8  00F9               	movwf	___lwmod@divisor+1
  2416  07D9  082D               	movf	printf@prec,w
  2417  07DA  00A8               	movwf	??_printf
  2418  07DB  01A9               	clrf	??_printf+1
  2419  07DC  35A8               	lslf	??_printf,f
  2420  07DD  0DA9               	rlf	??_printf+1,f
  2421  07DE  30BC               	movlw	low (_dpowers| (0+32768))
  2422  07DF  0728               	addwf	??_printf,w
  2423  07E0  0084               	movwf	4
  2424  07E1  3084               	movlw	high (_dpowers| (0+32768))
  2425  07E2  3D29               	addwfc	??_printf+1,w
  2426  07E3  0085               	movwf	5
  2427  07E4  3F00               	moviw [0]fsr0
  2428  07E5  00F0               	movwf	___lwdiv@divisor
  2429  07E6  3F01               	moviw [1]fsr0
  2430  07E7  00F1               	movwf	___lwdiv@divisor+1
  2431  07E8  0830               	movf	printf@val+1,w
  2432  07E9  00F3               	movwf	___lwdiv@dividend+1
  2433  07EA  082F               	movf	printf@val,w
  2434  07EB  00F2               	movwf	___lwdiv@dividend
  2435  07EC  264D               	fcall	___lwdiv
  2436  07ED  0871               	movf	?___lwdiv+1,w
  2437  07EE  00FB               	movwf	___lwmod@dividend+1
  2438  07EF  0870               	movf	?___lwdiv,w
  2439  07F0  00FA               	movwf	___lwmod@dividend
  2440  07F1  25BE               	fcall	___lwmod
  2441  07F2  0878               	movf	?___lwmod,w
  2442  07F3  3E30               	addlw	48
  2443  07F4  0140               	movlb	0	; select bank0
  2444  07F5  00AA               	movwf	??_printf+2
  2445  07F6  082A               	movf	??_printf+2,w
  2446  07F7  00B1               	movwf	printf@c
  2447                           
  2448                           ;doprnt.c: 1523: }
  2449                           ;doprnt.c: 1524: (putch(c) );
  2450  07F8  0831               	movf	printf@c,w
  2451  07F9  2482               	fcall	_putch
  2452  07FA  2FCD               	goto	l1090
  2453  07FB                     l238:	
  2454                           ;doprnt.c: 1540: return 0;
  2455                           ;	Return value of _printf is never used
  2456                           
  2457                           ;doprnt.c: 1525: }
  2458                           ;doprnt.c: 1533: }
  2459                           ;doprnt.c: 1535: alldone:
  2460                           
  2461  07FB  0008               	return
  2462  07FC                     __end_of_printf:	
  2463                           
  2464                           	psect	text2
  2465  0482                     __ptext2:	
  2466 ;; *************** function _putch *****************
  2467 ;; Defined at:
  2468 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  txData          1    wreg     unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  txData          1    1[COMMON] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2482 ;;      Params:         0       0       0       0
  2483 ;;      Locals:         1       0       0       0
  2484 ;;      Temps:          0       0       0       0
  2485 ;;      Totals:         1       0       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    1
  2489 ;; This function calls:
  2490 ;;		_EUSART1_Write
  2491 ;; This function is called by:
  2492 ;;		_printf
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _putch
  2498  0482                     _putch:	
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  2502                           ;putch@txData stored from wreg
  2503  0482  00F1               	movwf	putch@txData
  2504                           
  2505                           ;eusart1.c: 148: EUSART1_Write(txData);
  2506  0483  0871               	movf	putch@txData,w
  2507  0484  24AA               	fcall	_EUSART1_Write
  2508  0485  0008               	return
  2509  0486                     __end_of_putch:	
  2510                           
  2511                           	psect	text3
  2512  04AA                     __ptext3:	
  2513 ;; *************** function _EUSART1_Write *****************
  2514 ;; Defined at:
  2515 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  txData          1    wreg     unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  txData          1    0[COMMON] unsigned char 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2529 ;;      Params:         0       0       0       0
  2530 ;;      Locals:         1       0       0       0
  2531 ;;      Temps:          0       0       0       0
  2532 ;;      Totals:         1       0       0       0
  2533 ;;Total ram usage:        1 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_putch
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           
  2543                           ;psect for function _EUSART1_Write
  2544  04AA                     _EUSART1_Write:	
  2545                           
  2546                           ;incstack = 0
  2547                           ; Regs used in _EUSART1_Write: [wreg]
  2548                           ;EUSART1_Write@txData stored from wreg
  2549  04AA  00F0               	movwf	EUSART1_Write@txData
  2550  04AB                     l101:	
  2551                           ;eusart1.c: 135: {
  2552                           
  2553                           ;eusart1.c: 134: while(0 == PIR3bits.TX1IF)
  2554                           
  2555  04AB  014E               	movlb	14	; select bank14
  2556  04AC  1E0F               	btfss	15,4	;volatile
  2557  04AD  2CAB               	goto	l101
  2558                           
  2559                           ;eusart1.c: 136: }
  2560                           ;eusart1.c: 138: TX1REG = txData;
  2561  04AE  0870               	movf	EUSART1_Write@txData,w
  2562  04AF  0142               	movlb	2	; select bank2
  2563  04B0  009A               	movwf	26	;volatile
  2564  04B1  0008               	return
  2565  04B2                     __end_of_EUSART1_Write:	
  2566                           
  2567                           	psect	text4
  2568  05BE                     __ptext4:	
  2569 ;; *************** function ___lwmod *****************
  2570 ;; Defined at:
  2571 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  divisor         2    8[COMMON] unsigned int 
  2574 ;;  dividend        2   10[COMMON] unsigned int 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  counter         1   13[COMMON] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    8[COMMON] unsigned int 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2586 ;;      Params:         4       0       0       0
  2587 ;;      Locals:         1       0       0       0
  2588 ;;      Temps:          1       0       0       0
  2589 ;;      Totals:         6       0       0       0
  2590 ;;Total ram usage:        6 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_printf
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function ___lwmod
  2601  05BE                     ___lwmod:	
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2605  05BE  0878               	movf	___lwmod@divisor,w
  2606  05BF  0479               	iorwf	___lwmod@divisor+1,w
  2607  05C0  1903               	btfsc	3,2
  2608  05C1  2DE5               	goto	l1016
  2609  05C2  01FD               	clrf	___lwmod@counter
  2610  05C3  0AFD               	incf	___lwmod@counter,f
  2611  05C4                     l1006:	
  2612  05C4  1BF9               	btfsc	___lwmod@divisor+1,7
  2613  05C5  2DD0               	goto	l1008
  2614  05C6  3001               	movlw	1
  2615  05C7                     u425:	
  2616  05C7  35F8               	lslf	___lwmod@divisor,f
  2617  05C8  0DF9               	rlf	___lwmod@divisor+1,f
  2618  05C9  0B89               	decfsz	9,f
  2619  05CA  2DC7               	goto	u425
  2620  05CB  3001               	movlw	1
  2621  05CC  00FC               	movwf	??___lwmod
  2622  05CD  087C               	movf	??___lwmod,w
  2623  05CE  07FD               	addwf	___lwmod@counter,f
  2624  05CF  2DC4               	goto	l1006
  2625  05D0                     l1008:	
  2626  05D0  0879               	movf	___lwmod@divisor+1,w
  2627  05D1  027B               	subwf	___lwmod@dividend+1,w
  2628  05D2  1D03               	skipz
  2629  05D3  2DD6               	goto	u445
  2630  05D4  0878               	movf	___lwmod@divisor,w
  2631  05D5  027A               	subwf	___lwmod@dividend,w
  2632  05D6                     u445:	
  2633  05D6  1C03               	skipc
  2634  05D7  2DDC               	goto	l1012
  2635  05D8  0878               	movf	___lwmod@divisor,w
  2636  05D9  02FA               	subwf	___lwmod@dividend,f
  2637  05DA  0879               	movf	___lwmod@divisor+1,w
  2638  05DB  3BFB               	subwfb	___lwmod@dividend+1,f
  2639  05DC                     l1012:	
  2640  05DC  3001               	movlw	1
  2641  05DD                     u455:	
  2642  05DD  36F9               	lsrf	___lwmod@divisor+1,f
  2643  05DE  0CF8               	rrf	___lwmod@divisor,f
  2644  05DF  0B89               	decfsz	9,f
  2645  05E0  2DDD               	goto	u455
  2646  05E1  3001               	movlw	1
  2647  05E2  02FD               	subwf	___lwmod@counter,f
  2648  05E3  1D03               	btfss	3,2
  2649  05E4  2DD0               	goto	l1008
  2650  05E5                     l1016:	
  2651  05E5  087B               	movf	___lwmod@dividend+1,w
  2652  05E6  00F9               	movwf	?___lwmod+1
  2653  05E7  087A               	movf	___lwmod@dividend,w
  2654  05E8  00F8               	movwf	?___lwmod
  2655  05E9  0008               	return
  2656  05EA                     __end_of___lwmod:	
  2657                           
  2658                           	psect	text5
  2659  064D                     __ptext5:	
  2660 ;; *************** function ___lwdiv *****************
  2661 ;; Defined at:
  2662 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  divisor         2    0[COMMON] unsigned int 
  2665 ;;  dividend        2    2[COMMON] unsigned int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  quotient        2    5[COMMON] unsigned int 
  2668 ;;  counter         1    7[COMMON] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2    0[COMMON] unsigned int 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2678 ;;      Params:         4       0       0       0
  2679 ;;      Locals:         3       0       0       0
  2680 ;;      Temps:          1       0       0       0
  2681 ;;      Totals:         8       0       0       0
  2682 ;;Total ram usage:        8 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_printf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           
  2692                           ;psect for function ___lwdiv
  2693  064D                     ___lwdiv:	
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2697  064D  01F5               	clrf	___lwdiv@quotient
  2698  064E  01F6               	clrf	___lwdiv@quotient+1
  2699  064F  0870               	movf	___lwdiv@divisor,w
  2700  0650  0471               	iorwf	___lwdiv@divisor+1,w
  2701  0651  1903               	btfsc	3,2
  2702  0652  2E7C               	goto	l994
  2703  0653  01F7               	clrf	___lwdiv@counter
  2704  0654  0AF7               	incf	___lwdiv@counter,f
  2705  0655                     l982:	
  2706  0655  1BF1               	btfsc	___lwdiv@divisor+1,7
  2707  0656  2E61               	goto	l984
  2708  0657  3001               	movlw	1
  2709  0658                     u355:	
  2710  0658  35F0               	lslf	___lwdiv@divisor,f
  2711  0659  0DF1               	rlf	___lwdiv@divisor+1,f
  2712  065A  0B89               	decfsz	9,f
  2713  065B  2E58               	goto	u355
  2714  065C  3001               	movlw	1
  2715  065D  00F4               	movwf	??___lwdiv
  2716  065E  0874               	movf	??___lwdiv,w
  2717  065F  07F7               	addwf	___lwdiv@counter,f
  2718  0660  2E55               	goto	l982
  2719  0661                     l984:	
  2720  0661  3001               	movlw	1
  2721  0662                     u375:	
  2722  0662  35F5               	lslf	___lwdiv@quotient,f
  2723  0663  0DF6               	rlf	___lwdiv@quotient+1,f
  2724  0664  0B89               	decfsz	9,f
  2725  0665  2E62               	goto	u375
  2726  0666  0871               	movf	___lwdiv@divisor+1,w
  2727  0667  0273               	subwf	___lwdiv@dividend+1,w
  2728  0668  1D03               	skipz
  2729  0669  2E6C               	goto	u385
  2730  066A  0870               	movf	___lwdiv@divisor,w
  2731  066B  0272               	subwf	___lwdiv@dividend,w
  2732  066C                     u385:	
  2733  066C  1C03               	skipc
  2734  066D  2E73               	goto	l990
  2735  066E  0870               	movf	___lwdiv@divisor,w
  2736  066F  02F2               	subwf	___lwdiv@dividend,f
  2737  0670  0871               	movf	___lwdiv@divisor+1,w
  2738  0671  3BF3               	subwfb	___lwdiv@dividend+1,f
  2739  0672  1475               	bsf	___lwdiv@quotient,0
  2740  0673                     l990:	
  2741  0673  3001               	movlw	1
  2742  0674                     u395:	
  2743  0674  36F1               	lsrf	___lwdiv@divisor+1,f
  2744  0675  0CF0               	rrf	___lwdiv@divisor,f
  2745  0676  0B89               	decfsz	9,f
  2746  0677  2E74               	goto	u395
  2747  0678  3001               	movlw	1
  2748  0679  02F7               	subwf	___lwdiv@counter,f
  2749  067A  1D03               	btfss	3,2
  2750  067B  2E61               	goto	l984
  2751  067C                     l994:	
  2752  067C  0876               	movf	___lwdiv@quotient+1,w
  2753  067D  00F1               	movwf	?___lwdiv+1
  2754  067E  0875               	movf	___lwdiv@quotient,w
  2755  067F  00F0               	movwf	?___lwdiv
  2756  0680  0008               	return
  2757  0681                     __end_of___lwdiv:	
  2758                           
  2759                           	psect	text6
  2760  061A                     __ptext6:	
  2761 ;; *************** function _my_wait *****************
  2762 ;; Defined at:
  2763 ;;		line 24 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  my_time         1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  my_time         1    3[COMMON] unsigned char 
  2768 ;;  k               2    6[COMMON] int 
  2769 ;;  j               2    4[COMMON] int 
  2770 ;;  l               2    1[COMMON] int 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2780 ;;      Params:         0       0       0       0
  2781 ;;      Locals:         7       0       0       0
  2782 ;;      Temps:          1       0       0       0
  2783 ;;      Totals:         8       0       0       0
  2784 ;;Total ram usage:        8 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _my_wait
  2795  061A                     _my_wait:	
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _my_wait: [wreg+status,2]
  2799                           ;my_wait@my_time stored from wreg
  2800  061A  00F3               	movwf	my_wait@my_time
  2801                           
  2802                           ;main.c: 26: int j, k, l;
  2803                           ;main.c: 27: for (j=0; j<my_time; j++)
  2804  061B  01F4               	clrf	my_wait@j
  2805  061C  01F5               	clrf	my_wait@j+1
  2806  061D                     l15:	
  2807  061D  0875               	movf	my_wait@j+1,w
  2808  061E  3A80               	xorlw	128
  2809  061F  00F0               	movwf	??_my_wait
  2810  0620  3080               	movlw	128
  2811  0621  0270               	subwf	??_my_wait,w
  2812  0622  1D03               	skipz
  2813  0623  2E26               	goto	u495
  2814  0624  0873               	movf	my_wait@my_time,w
  2815  0625  0274               	subwf	my_wait@j,w
  2816  0626                     u495:	
  2817  0626  1803               	btfsc	3,0
  2818  0627  0008               	return
  2819                           
  2820                           ;main.c: 28: {
  2821                           ;main.c: 29: for (k=0; k<255; k++)
  2822  0628  01F6               	clrf	my_wait@k
  2823  0629  01F7               	clrf	my_wait@k+1
  2824  062A  0877               	movf	my_wait@k+1,w
  2825  062B  3A80               	xorlw	128
  2826  062C  00F0               	movwf	??_my_wait
  2827  062D  3080               	movlw	128
  2828  062E  0270               	subwf	??_my_wait,w
  2829  062F  1D03               	skipz
  2830  0630  2E33               	goto	u475
  2831  0631  30FF               	movlw	255
  2832  0632  0276               	subwf	my_wait@k,w
  2833  0633                     u475:	
  2834  0633  1803               	btfsc	3,0
  2835  0634  2E48               	goto	l1030
  2836  0635                     l1028:	
  2837                           
  2838                           ;main.c: 30: {
  2839                           ;main.c: 31: l++;
  2840  0635  3001               	movlw	1
  2841  0636  07F1               	addwf	my_wait@l,f
  2842  0637  3000               	movlw	0
  2843  0638  3DF2               	addwfc	my_wait@l+1,f
  2844  0639  3001               	movlw	1
  2845  063A  07F6               	addwf	my_wait@k,f
  2846  063B  3000               	movlw	0
  2847  063C  3DF7               	addwfc	my_wait@k+1,f
  2848  063D  0877               	movf	my_wait@k+1,w
  2849  063E  3A80               	xorlw	128
  2850  063F  00F0               	movwf	??_my_wait
  2851  0640  3080               	movlw	128
  2852  0641  0270               	subwf	??_my_wait,w
  2853  0642  1D03               	skipz
  2854  0643  2E46               	goto	u485
  2855  0644  30FF               	movlw	255
  2856  0645  0276               	subwf	my_wait@k,w
  2857  0646                     u485:	
  2858  0646  1C03               	skipc
  2859  0647  2E35               	goto	l1028
  2860  0648                     l1030:	
  2861  0648  3001               	movlw	1
  2862  0649  07F4               	addwf	my_wait@j,f
  2863  064A  3000               	movlw	0
  2864  064B  3DF5               	addwfc	my_wait@j+1,f
  2865  064C  2E1D               	goto	l15
  2866  064D                     __end_of_my_wait:	
  2867                           
  2868                           	psect	text7
  2869  048B                     __ptext7:	
  2870 ;; *************** function _SYSTEM_Initialize *****************
  2871 ;; Defined at:
  2872 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  1    wreg      void 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, pclath, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2886 ;;      Params:         0       0       0       0
  2887 ;;      Locals:         0       0       0       0
  2888 ;;      Temps:          0       0       0       0
  2889 ;;      Totals:         0       0       0       0
  2890 ;;Total ram usage:        0 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    2
  2893 ;; This function calls:
  2894 ;;		_EUSART1_Initialize
  2895 ;;		_OSCILLATOR_Initialize
  2896 ;;		_PIN_MANAGER_Initialize
  2897 ;;		_PMD_Initialize
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _SYSTEM_Initialize
  2905  048B                     _SYSTEM_Initialize:	
  2906                           
  2907                           ;mcc.c: 52: PMD_Initialize();
  2908                           
  2909                           ;incstack = 0
  2910                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2911  048B  24A2               	fcall	_PMD_Initialize
  2912                           
  2913                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2914  048C  2542               	fcall	_PIN_MANAGER_Initialize
  2915                           
  2916                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2917  048D  24B2               	fcall	_OSCILLATOR_Initialize
  2918                           
  2919                           ;mcc.c: 55: EUSART1_Initialize();
  2920  048E  24ED               	fcall	_EUSART1_Initialize
  2921  048F  0008               	return
  2922  0490                     __end_of_SYSTEM_Initialize:	
  2923                           
  2924                           	psect	text8
  2925  04A2                     __ptext8:	
  2926 ;; *************** function _PMD_Initialize *****************
  2927 ;; Defined at:
  2928 ;;		line 74 in file "mcc_generated_files/mcc.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		status,2
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2942 ;;      Params:         0       0       0       0
  2943 ;;      Locals:         0       0       0       0
  2944 ;;      Temps:          0       0       0       0
  2945 ;;      Totals:         0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_SYSTEM_Initialize
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _PMD_Initialize
  2957  04A2                     _PMD_Initialize:	
  2958                           
  2959                           ;mcc.c: 77: PMD0 = 0x00;
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _PMD_Initialize: [status,2]
  2963  04A2  014F               	movlb	15	; select bank15
  2964  04A3  0196               	clrf	22	;volatile
  2965                           
  2966                           ;mcc.c: 79: PMD1 = 0x00;
  2967  04A4  0197               	clrf	23	;volatile
  2968                           
  2969                           ;mcc.c: 81: PMD2 = 0x00;
  2970  04A5  0198               	clrf	24	;volatile
  2971                           
  2972                           ;mcc.c: 83: PMD3 = 0x00;
  2973  04A6  0199               	clrf	25	;volatile
  2974                           
  2975                           ;mcc.c: 85: PMD4 = 0x00;
  2976  04A7  019A               	clrf	26	;volatile
  2977                           
  2978                           ;mcc.c: 87: PMD5 = 0x00;
  2979  04A8  019B               	clrf	27	;volatile
  2980  04A9  0008               	return
  2981  04AA                     __end_of_PMD_Initialize:	
  2982                           
  2983                           	psect	text9
  2984  0542                     __ptext9:	
  2985 ;; *************** function _PIN_MANAGER_Initialize *****************
  2986 ;; Defined at:
  2987 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3001 ;;      Params:         0       0       0       0
  3002 ;;      Locals:         0       0       0       0
  3003 ;;      Temps:          0       0       0       0
  3004 ;;      Totals:         0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_SYSTEM_Initialize
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _PIN_MANAGER_Initialize
  3016  0542                     _PIN_MANAGER_Initialize:	
  3017                           
  3018                           ;pin_manager.c: 60: LATA = 0x00;
  3019                           
  3020                           ;incstack = 0
  3021                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3022  0542  0140               	movlb	0	; select bank0
  3023  0543  0198               	clrf	24	;volatile
  3024                           
  3025                           ;pin_manager.c: 61: LATC = 0x00;
  3026  0544  019A               	clrf	26	;volatile
  3027                           
  3028                           ;pin_manager.c: 66: TRISA = 0x37;
  3029  0545  3037               	movlw	55
  3030  0546  0092               	movwf	18	;volatile
  3031                           
  3032                           ;pin_manager.c: 67: TRISC = 0x20;
  3033  0547  3020               	movlw	32
  3034  0548  0094               	movwf	20	;volatile
  3035                           
  3036                           ;pin_manager.c: 72: ANSELC = 0x1F;
  3037  0549  301F               	movlw	31
  3038  054A  017E               	movlb	62	; select bank62
  3039  054B  00CE               	movwf	78	;volatile
  3040                           
  3041                           ;pin_manager.c: 73: ANSELA = 0x33;
  3042  054C  3033               	movlw	51
  3043  054D  00B8               	movwf	56	;volatile
  3044                           
  3045                           ;pin_manager.c: 78: WPUA = 0x00;
  3046  054E  01B9               	clrf	57	;volatile
  3047                           
  3048                           ;pin_manager.c: 79: WPUC = 0x00;
  3049  054F  01CF               	clrf	79	;volatile
  3050                           
  3051                           ;pin_manager.c: 84: ODCONA = 0x00;
  3052  0550  01BA               	clrf	58	;volatile
  3053                           
  3054                           ;pin_manager.c: 85: ODCONC = 0x00;
  3055  0551  01D0               	clrf	80	;volatile
  3056                           
  3057                           ;pin_manager.c: 90: SLRCONA = 0x37;
  3058  0552  3037               	movlw	55
  3059  0553  00BB               	movwf	59	;volatile
  3060                           
  3061                           ;pin_manager.c: 91: SLRCONC = 0x3F;
  3062  0554  303F               	movlw	63
  3063  0555  00D1               	movwf	81	;volatile
  3064                           
  3065                           ;pin_manager.c: 96: INLVLA = 0x3F;
  3066  0556  303F               	movlw	63
  3067  0557  00BC               	movwf	60	;volatile
  3068                           
  3069                           ;pin_manager.c: 97: INLVLC = 0x3F;
  3070  0558  303F               	movlw	63
  3071  0559  00D2               	movwf	82	;volatile
  3072                           
  3073                           ;pin_manager.c: 106: RC4PPS = 0x0F;
  3074  055A  300F               	movlw	15
  3075  055B  00A4               	movwf	36	;volatile
  3076                           
  3077                           ;pin_manager.c: 107: RX1DTPPS = 0x15;
  3078  055C  3015               	movlw	21
  3079  055D  017D               	movlb	61	; select bank61
  3080  055E  00CB               	movwf	75	;volatile
  3081  055F  0008               	return
  3082  0560                     __end_of_PIN_MANAGER_Initialize:	
  3083                           
  3084                           	psect	text10
  3085  04B2                     __ptext10:	
  3086 ;; *************** function _OSCILLATOR_Initialize *****************
  3087 ;; Defined at:
  3088 ;;		line 58 in file "mcc_generated_files/mcc.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3102 ;;      Params:         0       0       0       0
  3103 ;;      Locals:         0       0       0       0
  3104 ;;      Temps:          0       0       0       0
  3105 ;;      Totals:         0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_SYSTEM_Initialize
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           
  3116                           ;psect for function _OSCILLATOR_Initialize
  3117  04B2                     _OSCILLATOR_Initialize:	
  3118                           
  3119                           ;mcc.c: 61: OSCCON1 = 0x70;
  3120                           
  3121                           ;incstack = 0
  3122                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3123  04B2  3070               	movlw	112
  3124  04B3  0151               	movlb	17	; select bank17
  3125  04B4  008D               	movwf	13	;volatile
  3126                           
  3127                           ;mcc.c: 63: OSCCON3 = 0x00;
  3128  04B5  018F               	clrf	15	;volatile
  3129                           
  3130                           ;mcc.c: 65: OSCEN = 0x00;
  3131  04B6  0191               	clrf	17	;volatile
  3132                           
  3133                           ;mcc.c: 67: OSCFRQ = 0x02;
  3134  04B7  3002               	movlw	2
  3135  04B8  0093               	movwf	19	;volatile
  3136                           
  3137                           ;mcc.c: 69: OSCSTAT = 0x00;
  3138  04B9  0190               	clrf	16	;volatile
  3139                           
  3140                           ;mcc.c: 71: OSCTUNE = 0x00;
  3141  04BA  0192               	clrf	18	;volatile
  3142  04BB  0008               	return
  3143  04BC                     __end_of_OSCILLATOR_Initialize:	
  3144                           
  3145                           	psect	text11
  3146  04ED                     __ptext11:	
  3147 ;; *************** function _EUSART1_Initialize *****************
  3148 ;; Defined at:
  3149 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3163 ;;      Params:         0       0       0       0
  3164 ;;      Locals:         0       0       0       0
  3165 ;;      Temps:          0       0       0       0
  3166 ;;      Totals:         0       0       0       0
  3167 ;;Total ram usage:        0 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    1
  3170 ;; This function calls:
  3171 ;;		_EUSART1_SetErrorHandler
  3172 ;;		_EUSART1_SetFramingErrorHandler
  3173 ;;		_EUSART1_SetOverrunErrorHandler
  3174 ;; This function is called by:
  3175 ;;		_SYSTEM_Initialize
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function _EUSART1_Initialize
  3181  04ED                     _EUSART1_Initialize:	
  3182                           
  3183                           ;eusart1.c: 71: BAUD1CON = 0x08;
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3187  04ED  3008               	movlw	8
  3188  04EE  0142               	movlb	2	; select bank2
  3189  04EF  009F               	movwf	31	;volatile
  3190                           
  3191                           ;eusart1.c: 74: RC1STA = 0x90;
  3192  04F0  3090               	movlw	144
  3193  04F1  009D               	movwf	29	;volatile
  3194                           
  3195                           ;eusart1.c: 77: TX1STA = 0x24;
  3196  04F2  3024               	movlw	36
  3197  04F3  009E               	movwf	30	;volatile
  3198                           
  3199                           ;eusart1.c: 80: SP1BRGL = 0x67;
  3200  04F4  3067               	movlw	103
  3201  04F5  009B               	movwf	27	;volatile
  3202                           
  3203                           ;eusart1.c: 83: SP1BRGH = 0x00;
  3204  04F6  019C               	clrf	28	;volatile
  3205                           
  3206                           ;eusart1.c: 86: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  3207  04F7  3000               	movlw	0
  3208  04F8  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  3209  04F9  3000               	movlw	0
  3210  04FA  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  3211  04FB  2496               	fcall	_EUSART1_SetFramingErrorHandler
  3212                           
  3213                           ;eusart1.c: 87: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  3214  04FC  3000               	movlw	0
  3215  04FD  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  3216  04FE  3000               	movlw	0
  3217  04FF  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  3218  0500  249C               	fcall	_EUSART1_SetOverrunErrorHandler
  3219                           
  3220                           ;eusart1.c: 88: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  3221  0501  3000               	movlw	0
  3222  0502  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  3223  0503  3000               	movlw	0
  3224  0504  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  3225  0505  2490               	fcall	_EUSART1_SetErrorHandler
  3226                           
  3227                           ;eusart1.c: 90: eusart1RxLastError.status = 0;
  3228  0506  0140               	movlb	0	; select bank0
  3229  0507  01BD               	clrf	_eusart1RxLastError	;volatile
  3230  0508  0008               	return
  3231  0509                     __end_of_EUSART1_Initialize:	
  3232                           
  3233                           	psect	text12
  3234  049C                     __ptext12:	
  3235 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3236 ;; Defined at:
  3237 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3240 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3252 ;;      Params:         2       0       0       0
  3253 ;;      Locals:         0       0       0       0
  3254 ;;      Temps:          0       0       0       0
  3255 ;;      Totals:         2       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_EUSART1_Initialize
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _EUSART1_SetOverrunErrorHandler
  3267  049C                     _EUSART1_SetOverrunErrorHandler:	
  3268                           
  3269                           ;eusart1.c: 171: EUSART1_OverrunErrorHandler = interruptHandler;
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  3273  049C  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  3274  049D  0140               	movlb	0	; select bank0
  3275  049E  00BA               	movwf	_EUSART1_OverrunErrorHandler+1
  3276  049F  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  3277  04A0  00B9               	movwf	_EUSART1_OverrunErrorHandler
  3278  04A1  0008               	return
  3279  04A2                     __end_of_EUSART1_SetOverrunErrorHandler:	
  3280                           
  3281                           	psect	text13
  3282  0496                     __ptext13:	
  3283 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3284 ;; Defined at:
  3285 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3288 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3300 ;;      Params:         2       0       0       0
  3301 ;;      Locals:         0       0       0       0
  3302 ;;      Temps:          0       0       0       0
  3303 ;;      Totals:         2       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_EUSART1_Initialize
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _EUSART1_SetFramingErrorHandler
  3315  0496                     _EUSART1_SetFramingErrorHandler:	
  3316                           
  3317                           ;eusart1.c: 167: EUSART1_FramingErrorHandler = interruptHandler;
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  3321  0496  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  3322  0497  0140               	movlb	0	; select bank0
  3323  0498  00BC               	movwf	_EUSART1_FramingErrorHandler+1
  3324  0499  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  3325  049A  00BB               	movwf	_EUSART1_FramingErrorHandler
  3326  049B  0008               	return
  3327  049C                     __end_of_EUSART1_SetFramingErrorHandler:	
  3328                           
  3329                           	psect	text14
  3330  0490                     __ptext14:	
  3331 ;; *************** function _EUSART1_SetErrorHandler *****************
  3332 ;; Defined at:
  3333 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  3336 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3348 ;;      Params:         2       0       0       0
  3349 ;;      Locals:         0       0       0       0
  3350 ;;      Temps:          0       0       0       0
  3351 ;;      Totals:         2       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_EUSART1_Initialize
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _EUSART1_SetErrorHandler
  3363  0490                     _EUSART1_SetErrorHandler:	
  3364                           
  3365                           ;eusart1.c: 175: EUSART1_ErrorHandler = interruptHandler;
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  3369  0490  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  3370  0491  0140               	movlb	0	; select bank0
  3371  0492  00B8               	movwf	_EUSART1_ErrorHandler+1
  3372  0493  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  3373  0494  00B7               	movwf	_EUSART1_ErrorHandler
  3374  0495  0008               	return
  3375  0496                     __end_of_EUSART1_SetErrorHandler:	
  3376                           
  3377                           	psect	text15
  3378  0486                     __ptext15:	
  3379 ;; *************** function _EUSART1_is_rx_ready *****************
  3380 ;; Defined at:
  3381 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      unsigned char 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3395 ;;      Params:         0       0       0       0
  3396 ;;      Locals:         0       0       0       0
  3397 ;;      Temps:          0       0       0       0
  3398 ;;      Totals:         0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           
  3409                           ;psect for function _EUSART1_is_rx_ready
  3410  0486                     _EUSART1_is_rx_ready:	
  3411                           
  3412                           ;eusart1.c: 101: return (bool)(PIR3bits.RC1IF);
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
  3416  0486  014E               	movlb	14	; select bank14
  3417  0487  0E0F               	swapf	15,w	;volatile
  3418  0488  0C89               	rrf	9,f
  3419  0489  3901               	andlw	1
  3420  048A  0008               	return
  3421  048B                     __end_of_EUSART1_is_rx_ready:	
  3422                           
  3423                           	psect	text16
  3424  04C6                     __ptext16:	
  3425 ;; *************** function _EUSART1_Read *****************
  3426 ;; Defined at:
  3427 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      unsigned char 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3441 ;;      Params:         0       0       0       0
  3442 ;;      Locals:         0       0       0       0
  3443 ;;      Temps:          0       0       0       0
  3444 ;;      Totals:         0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;;		_getch
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function _EUSART1_Read
  3457  04C6                     _EUSART1_Read:	
  3458  04C6                     l94:	
  3459                           ;eusart1.c: 116: {
  3460                           
  3461                           ;eusart1.c: 115: while(!PIR3bits.RC1IF)
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in _EUSART1_Read: [wreg+status,2]
  3465                           
  3466  04C6  014E               	movlb	14	; select bank14
  3467  04C7  1E8F               	btfss	15,5	;volatile
  3468  04C8  2CC6               	goto	l94
  3469                           
  3470                           ;eusart1.c: 117: }
  3471                           ;eusart1.c: 119: eusart1RxLastError.status = 0;
  3472  04C9  0140               	movlb	0	; select bank0
  3473  04CA  01BD               	clrf	_eusart1RxLastError	;volatile
  3474                           
  3475                           ;eusart1.c: 121: if(1 == RC1STAbits.OERR)
  3476  04CB  0142               	movlb	2	; select bank2
  3477  04CC  1C9D               	btfss	29,1	;volatile
  3478  04CD  2CD0               	goto	l1106
  3479                           
  3480                           ;eusart1.c: 122: {
  3481                           ;eusart1.c: 125: RC1STAbits.CREN = 0;
  3482  04CE  121D               	bcf	29,4	;volatile
  3483                           
  3484                           ;eusart1.c: 126: RC1STAbits.CREN = 1;
  3485  04CF  161D               	bsf	29,4	;volatile
  3486  04D0                     l1106:	
  3487                           
  3488                           ;eusart1.c: 127: }
  3489                           ;eusart1.c: 129: return RC1REG;
  3490  04D0  0819               	movf	25,w	;volatile
  3491  04D1  0008               	return
  3492  04D2                     __end_of_EUSART1_Read:	
  3493  007E                     btemp	set	126	;btemp
  3494  007E                     wtemp0	set	126


Data Sizes:
    Strings     282
    Constant    10
    Data        0
    BSS         1
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      30
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 56
		 -> STR_8(CODE[56]), STR_7(CODE[32]), STR_6(CODE[32]), STR_5(CODE[29]), 
		 -> STR_4(CODE[48]), STR_3(CODE[27]), STR_2(CODE[30]), STR_1(CODE[28]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _printf->___lwmod
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1798
                                             18 BANK0      5     5      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                            _my_wait
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    18      8    1433
                                              0 BANK0     18    10      8
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _my_wait                                              8     8      0      93
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     225
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     225
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _my_wait
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      1E       5       37.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
ABS                  0      0      2C      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      2C      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Nov 06 11:45:44 2019

                                   __CFG_CP$OFF 0000                                              l15 061D  
                                            l94 04C6                                     __CFG_LVP$ON 0000  
                                           l101 04AB                                             l238 07FB  
                                           l990 0673                                             l982 0655  
                                           l984 0661                                             l994 067C  
                                           u425 05C7                                             u355 0658  
                                           u445 05D6                                             u375 0662  
                                           u455 05DD                                             u535 07B8  
                                           u385 066C                                             u475 0633  
                                           u395 0674                                             u485 0646  
                                           u495 0626                         __size_of_PMD_Initialize 0008  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                                    __CFG_ZCD$OFF 0000  
                                          l1012 05DC                                            l1030 0648  
                                          l1006 05C4                                            l1008 05D0  
                                          l1016 05E5                                            l1106 04D0  
                                          l1122 06D5                                            l1028 0635  
                                          l1052 0768                                            l1046 075A  
                                          l1080 07C2                                            l1048 075D  
                                          l1056 076B                                            l1090 07CD  
                                          l1074 07A3                                            l1058 0786  
                                          l1084 07C8                                            l1068 079D  
                                          l1092 0740                                            l1180 0708  
                                          l1182 0719                                            l1184 071E  
                                          l1168 0703                                            STR_1 0509  
                                          STR_2 0560                                            STR_3 04D2  
                                          STR_4 05EA                                            STR_5 0525  
                                          STR_6 057E                                            STR_7 059E  
                                          STR_8 0681                                            _LATA 0018  
                                          _LATC 001A                                            _PMD0 0796  
                                          _PMD1 0797                                            _PMD2 0798  
                                          _PMD3 0799                                            _PMD4 079A  
                                          _PMD5 079B                                            _WPUA 1F39  
                                          _WPUC 1F4F                                   _EUSART1_Write 04AA  
                                 __CFG_FCMEN$ON 0000                                            _main 06B9  
                                 ?_EUSART1_Read 0070                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            start 0001  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                __size_of_OSCILLATOR_Initialize 000A                   __end_of_OSCILLATOR_Initialize 04BC  
                                         ?_main 0070                                   __CFG_WDTE$OFF 0000  
                               __end_of___lwdiv 0681                                 __end_of___lwmod 05EA  
                                         _OSCEN 0891                                           _TRISA 0012  
                                         _TRISC 0014                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                 __end_of_dpowers 04C6  
                                         _putch 0482                                  ?_EUSART1_Write 0070  
                               __end_of_my_wait 064D                                  ??_EUSART1_Read 0070  
                                         status 0003                                           wtemp0 007E  
            _EUSART1_DefaultFramingErrorHandler 0000                                 __initialization 07FC  
                    __end_of_EUSART1_Initialize 0509                                    __end_of_main 073B  
                                __CFG_SAFEN$OFF 0000                                          ??_main 0032  
                                        _ANSELA 1F38                                          ?_putch 0070  
                                        _ANSELC 1F4E                                          _RC1REG 0119  
                                        _RC1STA 011D                                          _RC4PPS 1F24  
                                        _ODCONA 1F3A                                          _ODCONC 1F50  
                  __size_of_EUSART1_is_rx_ready 0005                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                  __CFG_PWRTE$OFF 0000  
                                __CFG_STVREN$ON 0000                                       ??___lwdiv 0074  
                                     ??___lwmod 007C                        ?_EUSART1_SetErrorHandler 0070  
                                        _printf 073B                ??_EUSART1_SetOverrunErrorHandler 0072  
               ?_EUSART1_SetOverrunErrorHandler 0070                                  _PMD_Initialize 04A2  
                                     ??_my_wait 0070                                 ??_EUSART1_Write 0070  
                             _SYSTEM_Initialize 048B                         __end_of__initialization 07FE  
                               __CFG_FEXTOSC$XT 0000                              ?_SYSTEM_Initialize 0070  
                                __pcstackCOMMON 0070                             ??_SYSTEM_Initialize 0072  
                                 __end_of_putch 0486                          __end_of_PMD_Initialize 04AA  
                          __end_of_EUSART1_Read 04D2                       __end_of_SYSTEM_Initialize 0490  
                                       ??_putch 0071                                      __pbssBANK0 003D  
               __end_of_EUSART1_SetErrorHandler 0496                                      __pmaintext 06B9  
                               __CFG_PPS1WAY$ON 0000                                         ?_printf 0020  
                               ?_PMD_Initialize 0070          __end_of_EUSART1_SetFramingErrorHandler 049C  
       __size_of_EUSART1_SetFramingErrorHandler 0006                  _EUSART1_SetFramingErrorHandler 0496  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                       _OSCSTAT 0890                                         _OSCTUNE 0892  
                                       _SLRCONA 1F3B                                         _SLRCONC 1F51  
                                       ___lwdiv 064D                                         ___lwmod 05BE  
                           _EUSART1_is_rx_ready 0486                                         __ptext1 073B  
                                       __ptext2 0482                                         __ptext3 04AA  
                                       __ptext4 05BE                                         __ptext5 064D  
                                       __ptext6 061A                                         __ptext7 048B  
                                       __ptext8 04A2                                         __ptext9 0542  
                               __size_of_printf 00C1                                 __CFG_WRTAPP$OFF 0000  
                                       _dpowers 04BC                           _OSCILLATOR_Initialize 04B2  
                            _EUSART1_Initialize 04ED                        ??_PIN_MANAGER_Initialize 0070  
                               __CFG_WRTSAF$OFF 0000                                         _my_wait 061A  
                                       main@cnt 0034                      __size_of_SYSTEM_Initialize 0005  
                          end_of_initialization 07FE                            ?_EUSART1_is_rx_ready 0070  
                           ?_EUSART1_Initialize 0070                     _EUSART1_OverrunErrorHandler 0039  
                                       printf@c 0031                                         printf@f 0020  
                         __size_of_EUSART1_Read 000C                            ??_EUSART1_Initialize 0072  
                         __CFG_WDTCPS$WDTCPS_31 0000                                       _PORTAbits 000C  
              __size_of_EUSART1_SetErrorHandler 0006                             EUSART1_Write@txData 0070  
                         ??_EUSART1_is_rx_ready 0070                                    _EUSART1_Read 04C6  
                        ?_OSCILLATOR_Initialize 0070                                  __end_of_printf 07FC  
                           start_initialization 07FC                 __size_of_PIN_MANAGER_Initialize 001E  
                                   putch@txData 0071                           __end_of_EUSART1_Write 04B2  
                             __CFG_RSTOSC$EXT1X 0000                                __CFG_LPBOREN$OFF 0000  
                              ??_PMD_Initialize 0070                                        ??_printf 0028  
                                     ___latbits 0000                                   __pcstackBANK0 0020  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                                     __pnvBANK0 0037                                ___lwdiv@dividend 0072  
                        _PIN_MANAGER_Initialize 0542                                        ?___lwdiv 0070  
                                      ?___lwmod 0078                                        _BAUD1CON 011F  
            _EUSART1_DefaultOverrunErrorHandler 0000                            _EUSART1_ErrorHandler 0037  
                       _EUSART1_SetErrorHandler 0490                                        ?_my_wait 0070  
                              ___lwdiv@quotient 0075                                  __size_of_putch 0004  
       EUSART1_SetErrorHandler@interruptHandler 0070                                        _LATCbits 001A  
                                      _PIR3bits 070F                                        _RX1DTPPS 1ECB  
                             __CFG_BBSIZE$BB512 0000                                      printf@flag 002C  
                                my_wait@my_time 0073                                      printf@prec 002D  
                                     main@input 0036                         ??_OSCILLATOR_Initialize 0070  
                   __size_of_EUSART1_Initialize 001C                                __size_of___lwdiv 0034  
                              __size_of___lwmod 002C                       ??_EUSART1_SetErrorHandler 0072  
                   _EUSART1_DefaultErrorHandler 0000                     __end_of_EUSART1_is_rx_ready 048B  
                               ___lwdiv@divisor 0070                                 ___lwdiv@counter 0077  
                                      __ptext10 04B2                                        __ptext11 04ED  
                                      __ptext12 049C                                        __ptext13 0496  
                                      __ptext14 0490                                        __ptext15 0486  
                                      __ptext16 04C6                                __size_of_my_wait 0033  
                                 __size_of_main 0082                            __CFG_WDTCWS$WDTCWS_7 0000  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                                     printf@val 002F                     _EUSART1_FramingErrorHandler 003B  
                                __pstringtext10 0000                                ___lwmod@dividend 007A  
                       ?_PIN_MANAGER_Initialize 0070                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 04A2         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 049C                                        my_wait@j 0074  
                                      my_wait@k 0076                                        my_wait@l 0071  
                                      printf@ap 002E  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 003D  
                                 __pstringtext1 04BC                                   __pstringtext2 0681  
                                 __pstringtext3 05EA                                   __pstringtext4 059E  
                                 __pstringtext5 057E                                   __pstringtext6 0560  
                                 __pstringtext7 0525                                   __pstringtext8 0509  
                                 __pstringtext9 04D2                                 ___lwmod@divisor 0078  
                               ___lwmod@counter 007D                                      _TX1STAbits 011E  
                __end_of_PIN_MANAGER_Initialize 0560  
